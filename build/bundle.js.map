{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Icon.svelte","../../src/HelpLink.svelte","../../src/modules/formatting.js","../../src/Info.svelte","../../src/Introduction.svelte","../../src/modules/vec.js","../../src/modules/theme.js","../../src/Profile.svelte","../../src/modules/drawing.js","../../src/Table.svelte","../../src/modules/geoadmin.js","../../src/modules/route.js","../../src/modules/import.js","../../src/modules/swisstopo.js","../../src/Upload.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n    export let name;\n</script>\n\n<span class=\"material-icons\">{name}</span>\n\n<style>\n    span {\n        font-size: 18px;\n        vertical-align: bottom;\n    }\n</style>\n","<script>\n    export let topic = null;\n    export let label = \"?\";\n</script>\n\n<a href={topic == null ? \"help\" : `help#${topic}`} target=\"_blank\" class=\"noprint\">{label}</a>\n\n<style>\n    a {\n        padding: 0 0.35em;\n        border-radius: 1em;\n        font-weight: bold;\n        text-decoration: none;\n        color: var(--text-color);\n        background: var(--lighter-accent-color);\n    }\n</style>\n","export function formatDuration(hours) {\n    const {h, m} = getParts(hours);\n    return `${h}:${pad(m)}`;\n}\n\nexport function formatTime(hours) {\n    const {h, m} = getParts(hours);\n    return `${pad(h % 24)}:${pad(m)}`;\n}\n\nfunction getParts(hours) {\n    const h = Math.floor(hours);\n    const m = Math.round((hours - h) * 60);\n    return {h, m};\n}\n\nfunction pad(number) {\n    return number < 10 ? `0${number}` : number.toString();\n}\n","<script>\n    import HelpLink from \"./HelpLink.svelte\";\n\n    import { formatDuration } from \"./modules/formatting.js\";\n\n    export let route;\n    export let speed;\n\n    $: ({ascent, descent} = calculateHeightDifference(route));\n\n    function calculateHeightDifference(route) {\n        let ascent = 0, descent = 0;\n        for (let i = 1; i < route.markers.length; i++) {\n            const diff = route.markerProfile[i].height - route.markerProfile[i - 1].height;\n            if (diff > 0) {\n                ascent += diff;\n            } else {\n                descent -= diff;\n            }\n        }\n        return { ascent, descent };\n    }\n</script>\n\nStart: <b>{route.markers[0].name}</b><br />\nEnde: <b>{route.markers[route.markers.length - 1].name}</b><br />\nAuf-/Abstieg: ↑ <b>{Math.round(ascent)} m</b> ↓ <b>{Math.round(descent)} m</b><br />\nDistanz: <b>{(route.distanceSum[route.line.length - 1] / 1000).toFixed(1)} km</b><br />\nAufwand: <b>{route.effortSum[route.markers.length - 1].toFixed(1)} Lkm</b> <HelpLink topic=\"calculation\" /><br />\nGeschwindigkeit: <b>{speed} Lkm/h</b><br />\nDauer: <b>{formatDuration(route.effortSum[route.markers.length - 1] / speed)} h</b><br />\n\n<style>\n</style>\n","<script>\n    import HelpLink from \"./HelpLink.svelte\";\n</script>\n\n<div class=\"title\">\n<h1>Marschzeit&shy;tabelle<br />leicht gemacht.</h1>\n<p class=\"subtitle\">Wir übertragen deine Route automatisch in eine Marschzeittabelle, damit du dich auf die Wanderplanung konzentrieren kannst.</p>\n</div>\n<div class=\"tutorial\">\n    <div>\n        <h2>1. Planen</h2>\n        <p>Route einzeichnen und Wegpunkte benennen - das kennst du bereits.</p>\n        <h2>2. Exportieren</h2>\n        <p>In wenigen Klicks erledigt. <HelpLink topic=\"export\" label=\"Wie geht das?\" /></p>\n        <h2>3. Hochladen</h2>\n        <p>Jetzt noch Geschwindigkeit, Startzeit, Bemerkungen und Pausen hinzufügen.</p>\n    </div>\n    <img src=\"example.jpg\" alt=\"Beispiel\" />\n</div>\n\n<style>\n    .title {\n        text-align: center;\n    }\n    \n    h1 {\n        font-size: 4em;\n        font-weight: 900;\n        color: var(--darker-accent-color);\n        margin-bottom: 1rem;\n    }\n\n    @media (max-width: 800px) {\n        h1 {\n            font-size: 3em;\n        }\n    }\n    \n    .subtitle {\n        font-size: 1.4em;\n    }\n\n    .tutorial {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        align-items: center;\n        gap: 1rem;\n        margin: 2rem;\n    }\n\n    .tutorial div {\n        flex: 1 1 15rem;\n    }\n\n    .tutorial img {\n        width: 100%;\n        flex: 0 1 20rem;\n        border-radius: 1rem;\n        box-shadow: 1rem 1rem 2rem rgba(0, 0, 0, 0.1);\n    }\n\n    h2 {\n        margin-bottom: 0;\n    }\n\n    p {\n        margin-top: 0;\n    }\n</style>","export function equal(a, b) {\n    return a.x === b.x && a.y === b.y;\n}\n\nexport function add(a, b) {\n    return { x: a.x + b.x, y: a.y + b.y };\n}\n\nexport function subtract(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\n\nexport function scale(vec, fac) {\n    return { x: vec.x * fac, y: vec.y * fac };\n}\n\nexport function length(vec) {\n    return Math.hypot(vec.x, vec.y);\n}\n\nexport function distance(a, b) {\n    return length(subtract(b, a));\n}\n","export const theme = {\n    backgroundColor: null,\n    textColor: null,\n    darkerAccentColor: null,\n    accentColor: null,\n    lighterAccentColor: null\n};\n\nexport function applyStyles() {\n    for (let key of Object.keys(theme)) {\n        const property = \"--\" + key.replace(/[A-Z]/g, (m) => \"-\" + m.toLowerCase());\n        theme[key] = window.getComputedStyle(document.body).getPropertyValue(property);\n    }\n}\n","<script>\n    import { drawProfile } from \"./modules/drawing.js\";\n\n    export let route;\n\n    let canvas;\n\n    $: if (canvas) {\n        canvas.width = 800;\n        canvas.height = 200;\n        drawProfile(route, canvas);\n    }\n</script>\n\n<canvas bind:this={canvas} />\n\n<style>\n    @media print {\n        canvas {\n            max-width: 100%;\n        }\n    }\n</style>\n","import * as vec from \"./vec.js\";\nimport { theme } from \"./theme.js\";\n\nexport function drawProfile(route, canvas) {\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const dotRadius = 10;\n    const padding = dotRadius + 2;\n    const lineWidth = 4;\n    const bottom = 40;\n\n    // Figure out scale of drawing\n    let minHeight = Infinity;\n    let maxHeight = -Infinity;\n    for (let p of route.lineProfile) {\n        minHeight = Math.min(minHeight, p.height);\n        maxHeight = Math.max(maxHeight, p.height);\n    }\n    const bounds = {\n        x: route.distanceSum[route.distanceSum.length - 1],\n        y: maxHeight - minHeight\n    };\n    const scale = Math.min(\n        (canvas.width - 2 * padding) / bounds.x,\n        (canvas.height - 2 * padding - bottom) / bounds.y);\n\n    // Fit canavs to drawing\n    canvas.width = Math.floor(bounds.x * scale + 2 * padding);\n    canvas.height = Math.floor(bounds.y * scale + 2 * padding + bottom);\n\n    const project = (distance, height) => vec.add(\n        vec.scale({ x: distance, y: minHeight - height }, scale),\n        { x: padding, y: canvas.height - padding - bottom });\n\n    const followLineProfile = () => {\n        for (let i = 0; i < route.lineProfile.length; i++) {\n            const p = project(\n                route.lineProfileDistanceSum[i],\n                route.lineProfile[i].height);\n\n            if (i === 0) {\n                ctx.moveTo(p.x, p.y);\n            } else {\n                ctx.lineTo(p.x, p.y);\n            }\n        }\n    };\n\n    // Draw area under line\n    ctx.beginPath();\n    followLineProfile();\n    const topLeft = project(0, maxHeight);\n    const bottomLeft = project(0, minHeight);\n    const bottomRight = project(bounds.x, minHeight);\n    ctx.lineTo(bottomRight.x, canvas.height);\n    ctx.lineTo(bottomLeft.x, canvas.height);\n    const gradient = ctx.createLinearGradient(0, topLeft.y, 0, canvas.height);\n    gradient.addColorStop(0, theme.lighterAccentColor);\n    gradient.addColorStop(1, theme.backgroundColor);\n    ctx.fillStyle = gradient;\n    ctx.fill();\n\n    // Draw line\n    ctx.beginPath();\n    followLineProfile();\n    ctx.lineWidth = lineWidth;\n    ctx.lineCap = ctx.lineJoin = \"round\";\n    ctx.strokeStyle = theme.accentColor;\n    ctx.stroke();\n\n    // Draw dots and numbers\n    ctx.font = \"bold 14px sans-serif\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    for (let i = 0; i < route.markerProfile.length; i++) {\n        const p = project(\n            route.distanceSum[route.markers[i].index],\n            route.markerProfile[i].height);\n\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, dotRadius, 0, 2 * Math.PI);\n        ctx.fillStyle = theme.darkerAccentColor;\n        ctx.fill();\n\n        ctx.fillStyle = theme.backgroundColor;\n        ctx.fillText(i + 1, p.x, p.y + 0.5);\n    }\n\n    // Draw scale\n    const thickness = 2;\n    const step = 125;\n    const maxWidth = 120;\n    const count = Math.floor(Math.log2(maxWidth / (step * scale)));\n    const meters = step * 2 ** count;\n    const size = meters * scale;\n    ctx.fillStyle = theme.textColor;\n    ctx.fillRect(canvas.width - padding - size, canvas.height - 2 * thickness, size, thickness);\n    ctx.fillRect(canvas.width - padding - size, canvas.height - 3 * thickness, thickness, 3 * thickness);\n    ctx.fillRect(canvas.width - padding - thickness, canvas.height - 3 * thickness, thickness, 3 * thickness);\n    ctx.textAlign = \"right\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(`${meters} m`, canvas.width - padding, canvas.height - 3 * thickness);\n}\n","<script>\n    import Icon from \"./Icon.svelte\";\n\n    import { formatDuration, formatTime } from \"./modules/formatting.js\";\n\n    export let route;\n    export let speed;\n\n    let data = [];\n\n    $: if (!window.isNaN(speed) && speed > 0) {\n        data = calculate(route, speed);\n    }\n\n    function calculate(route, speed) {\n        const res = [];\n        for (let i = 0; i < route.markers.length; i++) {\n            res[i] = {\n                index: i + 1,\n                name: route.markers[i].name,\n                height: route.markerProfile[i].height,\n                distance: route.distanceSum[route.markers[i].index] / 1000,\n                effort: route.effortSum[i],\n                duration: route.effortSum[i] / speed\n            };\n\n            if (i > 0) {\n                res[i].diff = {\n                    height: res[i].height - res[i - 1].height,\n                    distance: res[i].distance - res[i - 1].distance,\n                    effort: route.effort[i],\n                    duration: res[i].duration - res[i - 1].duration\n                };\n            }\n        }\n        return res;\n    }\n\n    function exportCsv() {\n        const header = [\n            \"Nr.\",\n            \"Name\",\n            \"Höhe / m\",\n            \"Unterschied Höhe / m\",\n            \"Total Distanz / km\",\n            \"Unterschied Distanz / km\",\n            \"Total Aufwand / Lkm\",\n            \"Unterschied Aufwand / Lkm\",\n            \"Total Dauer / h\",\n            \"Unterschied Dauer / h\",\n            \"Uhrzeit / h\",\n        ];\n\n        const rows = data.map((row) => [\n            row.index,\n            row.name,\n            row.height,\n            row.diff?.height ?? 0,\n            row.distance,\n            row.diff?.distance ?? 0,\n            row.effort,\n            row.diff?.effort ?? 0,\n            row.duration,\n            row.diff?.duration ?? 0,\n            row.duration,\n        ]);\n\n        const csv = [header, ...rows]\n            .map((fields) => fields.map((f) => `\"${f}\"`).join(\",\"))\n            .join(\"\\n\");\n\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(new Blob([csv], { type: \"text/csv\" }));\n        a.download = \"marschzeittabelle.csv\";\n        a.click();\n    }\n</script>\n\n<table>\n    <tr>\n        <th>Wegpunkt</th>\n        <th>Höhe</th>\n        <th>Distanz</th>\n        <th>Aufwand</th>\n        <th>Dauer</th>\n        <th>Uhrzeit</th>\n    </tr>\n    {#each data as row}\n        {#if row.diff}\n            <tr class=\"alt\">\n                <td />\n                <td class=\"number\">{Math.round(row.diff.height)} m</td>\n                <td class=\"number\">{row.diff.distance.toFixed(1)} km</td>\n                <td class=\"number\">{row.diff.effort.toFixed(1)} Lkm</td>\n                <td class=\"number\">{formatDuration(row.diff.duration)} h</td>\n                <td />\n            </tr>\n        {/if}\n        <tr>\n            <td class=\"name\"><span>{row.index}</span> {row.name}</td>\n            <td class=\"number\">{Math.round(row.height)} m</td>\n            <td class=\"number\">{row.distance.toFixed(1)} km</td>\n            <td class=\"number\">{row.effort.toFixed(1)} Lkm</td>\n            <td class=\"number\">{formatDuration(row.duration)} h</td>\n            <td class=\"number\">{formatTime(row.duration)}</td>\n        </tr>\n    {/each}\n</table>\n<br />\n<button on:click={exportCsv} class=\"noprint\"><Icon name=\"output\" /> CSV exportieren</button>\n\n<style>\n    table {\n        white-space: nowrap;\n    }\n\n    th {\n        text-align: left;\n    }\n\n    th, td {\n        padding-left: 1rem;\n    }\n\n    th:first-child, td:first-child {\n        padding-left: 0;\n    }\n\n    .name {\n        font-weight: bold;\n        color: var(--darker-accent-color);\n    }\n\n    .name span {\n        display: inline-block;\n        min-width: 1.3em;\n        border-radius: 1em;\n        font-weight: bold;\n        text-align: center;\n        color: var(--background-color);\n        background: var(--darker-accent-color);\n    }\n\n    .alt {\n        color: var(--accent-color);\n    }\n\n    .number {\n        text-align: right;\n        font-family: \"Roboto Mono\", monospace;\n    }\n</style>\n","import * as vec from \"./vec.js\";\n\nconst baseUrl = \"https://api3.geo.admin.ch/rest/services\";\nconst epsilon = 2;\n\nexport function fetchProfile(line, ensureInputPoints, resolution) {\n    const geometry = {\n        type: \"LineString\",\n        coordinates: line.map(p => [Math.round(p.x), Math.round(p.y)])\n    };\n    return fetch(`${baseUrl}/profile.json`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: `sr=21781&distinct_points=${ensureInputPoints}&nb_points=${resolution}&geom=${JSON.stringify(geometry)}`\n    })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                throw \"Das Höhenprofil konnte nicht geladen werden.\";\n            }\n        })\n        .then((data) => new Promise((resolve) => {\n            let profile = data.map(p => ({\n                point: { x: p.easting, y: p.northing },\n                height: p.alts.COMB\n            }));\n\n            // Remove extra points not associated with a marker\n            if (ensureInputPoints) {\n                profile = profile.filter(p => line.some(l => vec.distance(p.point, l) < epsilon));\n            }\n\n            resolve(profile);\n        }))\n        .catch(() => { throw \"Die Verbindung zu den swisstopo-Servern ist fehlgeschlagen.\" });\n}\n","import * as vec from \"./vec.js\";\nimport { fetchProfile } from \"./geoadmin.js\";\n\nexport async function loadProfiles(route) {\n    // Load data from api\n    route.lineProfile = await fetchProfile(route.line, false, 100);\n    route.markerProfile = await fetchProfile(route.markers.map(m => route.line[m.index]), true, route.markers.length);\n\n    // Calculate distance and effort\n    recalculate(route);\n\n    return route;\n}\n\nexport function reverseRoute(route) {\n    // Reverse order\n    route.line.reverse();\n    route.markers.reverse();\n    route.lineProfile?.reverse();\n    route.markerProfile?.reverse();\n\n    // Get new marker indexes\n    route.markers.forEach(m => m.index = route.line.length - m.index - 1);\n\n    // Recalculate distance and effort\n    recalculate(route);\n}\n\nfunction recalculate(route) {\n    route.distanceSum = calculateDistanceSum(route.line);\n    route.lineProfileDistanceSum = calculateDistanceSum(route.lineProfile.map(p => p.point));\n    route.effort = calculateEffort(route);\n    route.effortSum = calculateSum(route.effort);\n}\n\nfunction calculateDistanceSum(line) {\n    const distances = line\n        .map((_, i) => vec.distance(line[Math.max(0, i - 1)], line[i]));\n    return calculateSum(distances);\n}\n\nfunction calculateSum(values) {\n    const res = [];\n    let sum = 0;\n    for (let i = 0; i < values.length; i++) {\n        sum += values[i];\n        res[i] = sum;\n    }\n    return res;\n}\n\n// Calculate effort (Leistungskilometer) using formula found here: https://de.wikipedia.org/wiki/Leistungskilometer\nfunction calculateEffort(route) {\n    const effort = [];\n    effort[0] = 0;\n    for (let i = 1; i < route.markers.length; i++) {\n        const run = route.distanceSum[route.markers[i].index] - route.distanceSum[route.markers[i - 1].index];\n        const rise = route.markerProfile[i].height - route.markerProfile[i - 1].height;\n        const slope = rise / run;\n\n        effort[i] = run / 1000;\n        if (slope > 0) {\n            effort[i] += rise / 100;\n        } else if (slope < -0.2) {\n            effort[i] += Math.abs(rise) / 150;\n        }\n    }\n    return effort;\n}\n","import { loadProfiles } from \"./route.js\";\nimport { Swisstopo } from \"./swisstopo.js\";\nimport * as vec from \"./vec.js\";\n\nconst epsilon = 10;\n\nexport function importFile(file) {\n    return readFile(file)\n        .then((content) => parseXml(content))\n        .then((xml) => {\n            if (file.name.endsWith(\".kml\")) {\n                return readKml(xml);\n            } else if (file.name.endsWith(\".gpx\")) {\n                return readGpx(xml);\n            }\n        })\n        .then(({ lines, markers }) => buildRoute(lines, markers))\n        .then((route) => loadProfiles(route));\n}\n\nfunction readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => resolve(reader.result));\n        reader.addEventListener(\"error\", () => reject(\"Die Datei konnte nicht gelesen werden.\"));\n        reader.readAsText(file);\n    });\n}\n\nasync function parseXml(xmlString) {\n    const parser = new DOMParser();\n    const xml = parser.parseFromString(xmlString, \"application/xml\");\n    if (xml.querySelector(\"parsererror\")) {\n        throw \"Die Datei ist nicht in gültigem XML-Format.\";\n    }\n    return xml;\n}\n\nasync function readKml(xml) {\n    const lines = [];\n    const markers = [];\n\n    const coords = (str) => {\n        const [long, lat] = str.split(\",\");\n        return convertCoordinates(lat, long);\n    };\n\n    const placemarks = xml.querySelectorAll(\"Placemark\");\n    for (let placemark of placemarks) {\n        // Find lines\n        if (placemark.querySelector(\"LineString\")) {\n            const points = placemark\n                .querySelector(\"LineString coordinates\")\n                .innerHTML\n                .trim()\n                .split(\" \")\n                .map(s => coords(s));\n            lines.push(points);\n        }\n\n        // Find markers\n        if (placemark.querySelector(\"Point\")) {\n            const name = placemark\n                .querySelector(\"name\")\n                .innerHTML\n                .trim();\n            const point = coords(placemark\n                .querySelector(\"Point coordinates\")\n                .innerHTML);\n            markers.push({ name, point });\n        }\n    }\n\n    return { lines, markers };\n}\n\nasync function readGpx(xml) {\n    const lines = [];\n    const markers = [];\n\n    const coords = (p) => convertCoordinates(\n        p.getAttribute(\"lat\"), p.getAttribute(\"lon\"));\n\n    // Find lines\n    const segments = xml.querySelectorAll(\"trkseg\");\n    for (let segment of segments) {\n        const points = Array.from(segment.querySelectorAll(\"trkpt\"))\n            .map(p => coords(p));\n        lines.push(points);\n    }\n\n    // Find markers stored as track points\n    const nameElements = xml.querySelectorAll(\"trkpt > name\");\n    for (let nameElement of nameElements) {\n        const name = nameElement\n            .innerHTML\n            .trim();\n        const point = coords(nameElement.parentElement);\n        markers.push({ name, point });\n    }\n\n    // Find markers stored as waypoints\n    if (markers.length === 0) {\n        const waypoints = xml.querySelectorAll(\"wpt\");\n        for (let waypoint of waypoints) {\n            const name = waypoint\n                .querySelector(\"name\")\n                .innerHTML\n                .trim();\n            const point = coords(waypoint);\n            markers.push({ name, point });\n        }\n    }\n\n    return { lines, markers };\n}\n\n// Converts coordinates from WGS84 to LV03\nfunction convertCoordinates(lat, long) {\n    const [x, y] = Swisstopo.WGStoCH(Number(lat), Number(long));\n    return { x, y };\n}\n\nasync function buildRoute(lines, markers) {\n    // Check if route contains line and markers\n    if (lines.length === 0) {\n        throw \"Die Route enthält keine Linie.\"\n    }\n    if (markers.length === 0) {\n        throw \"Die Route enthält keine Wegpunkte.\"\n    }\n\n    // Merge disjointed lines\n    while (lines.length > 1) {\n        const connected = findConnectedLines(lines, epsilon);\n        if (connected == null) {\n            throw \"Die Route enthält Linien, die nicht miteinander verbunden sind.\";\n        }\n\n        if (connected.reverseFirst) {\n            lines[connected.i].reverse();\n        }\n        if (connected.reverseSecond) {\n            lines[connected.j].reverse();\n        }\n        // Append points of second line\n        lines[connected.i].push(...lines[connected.j]);\n        // Remove second line\n        lines.splice(connected.j, 1);\n    }\n    const line = lines[0];\n\n    // Assign markers to points on line\n    let lastPoint = null;\n    for (let i = 0; i < line.length; i++) {\n        // Find matching markers while not using markers twice in a row\n        const matches = markers\n            .filter(m => lastPoint == null || !vec.equal(m.point, lastPoint))\n            .filter(m => vec.distance(m.point, line[i]) < epsilon);\n        if (matches.length === 0) {\n            continue; // No markers here\n        }\n\n        // Detect multiple markers in the same place\n        const duplicates = matches\n            .filter(m => m.index == null);\n        if (matches.length > 1) {\n            const list = duplicates\n                .map(m => `\"${m.name}\"`)\n                .join(\", \");\n            throw `Mehrere Wegpunkte am selben Ort: ${list}.`;\n        }\n\n        // Assign index\n        const marker = matches[0];\n        if (marker.index == null) {\n            // Marker has not been used\n            marker.index = i;\n        } else {\n            // Line has looped back to this marker\n            // Create duplicate of used marker\n            markers.push({\n                name: marker.name,\n                point: marker.point,\n                index: i\n            });\n        }\n\n        lastPoint = marker.point;\n    }\n\n    // Check if all markers have been assigned\n    const unassigned = markers\n        .filter(m => m.index == null);\n    if (unassigned.length > 0) {\n        const list = unassigned\n            .map(m => `\"${m.name}\"`)\n            .join(\", \");\n        throw `Wegpunkte nicht in der Nähe von Eckpunkten der Linie: ${list}.`;\n    }\n\n    // Bring markers in right order\n    markers.sort((a, b) => a.index - b.index);\n\n    return { line, markers };\n}\n\nfunction findConnectedLines(lines) {\n    const areEqual = (a, b) => vec.distance(a, b) < epsilon;\n\n    for (let i = 0; i < lines.length; i++) {\n        for (let j = i + 1; j < lines.length; j++) {\n            if (areEqual(lines[i][lines[i].length - 1], lines[j][0])) {\n                // Matching directions, matching order: -> ->\n                return { i, j, reverseFirst: false, reverseSecond: false };\n            } else if (areEqual(lines[i][0], lines[j][lines[j].length - 1])) {\n                // Matching directions, reversed order: <- <-\n                return { i, j, reverseFirst: true, reverseSecond: true };\n            } else if (areEqual(lines[i][0], lines[j][0])) {\n                // Opposing directions, matching order: <- ->\n                return { i, j, reverseFirst: true, reverseSecond: false };\n            } else if (areEqual(lines[i][lines[i].length - 1], lines[j][lines[j].length - 1])) {\n                // Opposing directions, reversed order: -> <-\n                return { i, j, reverseFirst: false, reverseSecond: true };\n            }\n        }\n    }\n\n    // No connected lines found\n    return null;\n}\n","// The MIT License (MIT)\n// \n// Copyright (c) 2014 Federal Office of Topography swisstopo, Wabern, CH\n// Copyright (c) 2016 Sacha Bron https://github.com/BinaryBrain\n// Copyright (c) 2016 Basile Vu https://github.com/Flagoul\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n//\tof this software and associated documentation files (the \"Software\"), to deal\n//\tin the Software without restriction, including without limitation the rights\n//\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//\tcopies of the Software, and to permit persons to whom the Software is\n//\tfurnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n//\tall copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n//\tTHE SOFTWARE.\n// \n\n// Source: http://www.swisstopo.admin.ch/internet/swisstopo/en/home/topics/survey/sys/refsys/projections.html (see PDFs under \"Documentation\")\n// Updated 9 dec 2014\n// Please validate your results with NAVREF on-line service: http://www.swisstopo.admin.ch/internet/swisstopo/en/home/apps/calc/navref.html (difference ~ 1-2m)\n\n// Modified from https://github.com/ValentinMinder/Swisstopo-WGS84-LV03/blob/f1a7e0129d93647c1c11e151b95a208a53e57ce6/scripts/js/wgs84_ch1903.js\n\nexport class Swisstopo {\n    static WGStoCH(lat, lng) {\n        return [\n            this.WGStoCHy(lat, lng),\n            this.WGStoCHx(lat, lng)\n        ];\n    }\n\n    // Convert WGS lat/lng (° dec) to CH x\n    static WGStoCHx(lat, lng) {\n        // Convert decimal degrees to sexagesimal seconds\n        lat = this.DECtoSEX(lat);\n        lng = this.DECtoSEX(lng);\n\n        // Auxiliary values (% Bern)\n        const lat_aux = (lat - 169028.66) / 10000;\n        const lng_aux = (lng - 26782.5) / 10000;\n\n        // Process X\n        const x = 200147.07 +\n            308807.95 * lat_aux +\n            3745.25 * Math.pow(lng_aux, 2) +\n            76.63 * Math.pow(lat_aux, 2) -\n            194.56 * Math.pow(lng_aux, 2) * lat_aux +\n            119.79 * Math.pow(lat_aux, 3);\n\n        return x;\n    }\n\n    // Convert WGS lat/lng (° dec) to CH y\n    static WGStoCHy(lat, lng) {\n        // Convert decimal degrees to sexagesimal seconds\n        lat = this.DECtoSEX(lat);\n        lng = this.DECtoSEX(lng);\n\n        // Auxiliary values (% Bern)\n        const lat_aux = (lat - 169028.66) / 10000;\n        const lng_aux = (lng - 26782.5) / 10000;\n\n        // Process Y\n        const y = 600072.37 +\n            211455.93 * lng_aux -\n            10938.51 * lng_aux * lat_aux -\n            0.36 * lng_aux * Math.pow(lat_aux, 2) -\n            44.54 * Math.pow(lng_aux, 3);\n\n        return y;\n    }\n\n    static CHtoWGS(y, x) {\n        return [\n            this.CHtoWGSlng(y, x),\n            this.CHtoWGSlat(y, x)\n        ];\n    }\n\n    // Convert CH y/x to WGS lat\n    static CHtoWGSlat(y, x) {\n        // Converts military to civil and to unit = 1000km\n        // Auxiliary values (% Bern)\n        const y_aux = (y - 600000) / 1000000;\n        const x_aux = (x - 200000) / 1000000;\n\n        // Process lat\n        const lat = 16.9023892 +\n            3.238272 * x_aux -\n            0.270978 * Math.pow(y_aux, 2) -\n            0.002528 * Math.pow(x_aux, 2) -\n            0.0447 * Math.pow(y_aux, 2) * x_aux -\n            0.0140 * Math.pow(x_aux, 3);\n\n        // Unit 10000\" to 1 \" and converts seconds to degrees (dec)\n        return lat * 100 / 36;\n    }\n\n    // Convert CH y/x to WGS lng\n    static CHtoWGSlng(y, x) {\n        // Converts military to civil and\tto unit = 1000km\n        // Auxiliary values (% Bern)\n        const y_aux = (y - 600000) / 1000000;\n        const x_aux = (x - 200000) / 1000000;\n\n        // Process lng\n        const lng = 2.6779094 +\n            4.728982 * y_aux +\n            0.791484 * y_aux * x_aux +\n            0.1306 * y_aux * Math.pow(x_aux, 2) -\n            0.0436 * Math.pow(y_aux, 3);\n\n        // Unit 10000\" to 1 \" and converts seconds to degrees (dec)\n        return lng * 100 / 36;\n    }\n\n    // Convert angle in decimal degrees to sexagesimal seconds\n    static DECtoSEX(angle) {\n        // Extract DMS\n        const deg = parseInt(angle);\n        const min = parseInt((angle - deg) * 60);\n        const sec = (((angle - deg) * 60) - min) * 60;\n\n        // Result sexagesimal seconds\n        return sec + min * 60.0 + deg * 3600.0;\n    }\n}\n","<script>\n    import Icon from \"./Icon.svelte\";\n\n    import { importFile } from \"./modules/import.js\";\n\n    export let route = null;\n\n    let files;\n    let promise;\n\n    $: if (files && files[0]) {\n        promise = importFile(files[0])\n            .then((result) => route = result);\n    }\n</script>\n\n<div\n    on:drop|preventDefault={(e) => files = e.dataTransfer.files}\n    on:dragover|preventDefault>\n    {#if files && files[0]}\n        {#await promise}\n            <h3>Route wird gewandert...</h3>\n        {:catch error}\n            <h3>Hoppla!</h3>\n            <p>Es gab einen Fehler beim Import:<br />{error}</p>\n            <button class=\"secondary\" on:click={() => files = null}>Nochmal versuchen</button>\n        {/await}\n    {:else}\n        <h2>Route hochladen</h2>\n        <p>Unterstützt sind <b>KML-Dateien</b> von <a href=\"https://map.geo.admin.ch\" target=\"_blank\">map.geo.admin.ch</a> oder der <a href=\"https://www.swisstopo.admin.ch/en/maps-data-online/maps-geodata-online/swisstopo-app.html\" target=\"_blank\">swisstopo-App</a>, sowie <b>GPX-Dateien</b> von <a href=\"https://www.outdooractive.com/de/routeplanner\" target=\"_blank\">outdooractive.com</a>.</p>\n        <p>Datei hierher ziehen oder...</p>\n        <input type=\"file\" id=\"upload\" accept=\".kml, .gpx\" bind:files />\n        <button>\n            <label for=\"upload\"><Icon name=\"upload_file\" /> Datei auswählen</label>\n        </button>\n        <br>\n    {/if}\n</div>\n\n<style>\n    div {\n        border-radius: 2rem;\n        border: 3px dashed var(--lighter-accent-color);\n        padding: 3rem 6rem;\n        text-align: center;\n    }\n\n    @media (max-width: 600px) {\n        div {\n            padding: 2rem;\n        }\n    }\n\n    div h2 {\n        margin: 0;\n    }\n\n    input {\n        opacity: 0;\n        position: absolute;\n        width: 0;\n        height: 0;\n    }\n\n    label {\n        cursor: inherit;\n    }\n</style>\n","<script>\n    import Icon from \"./Icon.svelte\";\n    import Info from \"./Info.svelte\";\n    import Introduction from \"./Introduction.svelte\";\n    import Profile from \"./Profile.svelte\";\n    import Table from \"./Table.svelte\";\n    import Upload from \"./Upload.svelte\";\n\n    import { reverseRoute } from \"./modules/route.js\";\n\n    let route;\n    let speed = 4;\n\n    function reverse() {\n        reverseRoute(route);\n        route = route;\n    }\n\n    function print() {\n        window.print();\n    }\n</script>\n\n{#if route != null}\n    <header class=\"noprint\">\n        <a href=\".\">❮ startseite</a>\n    </header>\n{/if}\n<main>\n    {#if route == null}\n        <Introduction />\n        <Upload bind:route />\n    {:else}\n        <div class=\"editor\">\n            <div class=\"general\">\n                <div class=\"info\">\n                    <h2>Route</h2>\n                    <Info {route} {speed}/>\n                </div>\n                <div class=\"options noprint\">\n                    <h2>Optionen</h2>\n                    <label for=\"speed\">Geschwindigkeit in Lkm/h</label>\n                    <input id=\"speed\" type=\"number\" min=\"0.5\" step=\"0.5\" bind:value={speed} />\n                    <br />\n                    <button class=\"secondary\" on:click={reverse}><Icon name=\"swap_horiz\" /> Richtung wechseln</button>\n                    <br />\n                    <br />\n                    <button on:click={print}><Icon name=\"download\" /> Herunterladen</button>\n                </div>\n            </div>\n            <div class=\"table\">\n                <h2>Marschzeittabelle</h2>\n                <Table {route} {speed} />\n            </div>\n            <div class=\"profile\">\n                <h2>Höhenprofil</h2>\n                <Profile {route} />\n            </div>\n        </div>\n    {/if}\n</main>\n<footer>\n    <span>marschzeittabelle.ch</span>\n    <span class=\"noprint\">\n        | <a href=\"help\">hilfe</a>\n        | <a href=\"https://github.com/ckolin/marschzeittabelle\">github</a>\n    </span>\n</footer>\n\n<style>\n    .general {\n        display: flex;\n        align-items: flex-start;\n        justify-content: space-between;\n        flex-wrap: wrap;\n    }\n\n    .options label, input {\n        display: block;\n    }\n\n    @media not print {\n        .table, .profile {\n            overflow-x: auto;\n        }\n    }\n\n    footer {\n        text-align: center;\n        margin-top: 2rem;\n    }\n</style>\n","import App from \"./App.svelte\";\n\nimport { applyStyles } from \"./modules/theme.js\";\n\nconst app = new App({ target: document.body });\nexport default app;\n\napplyStyles();\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_current_component","component","get_current_component","Error","bubble","callbacks","$$","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","handle_promise","promise","info","token","index","key","resolved","child_ctx","undefined","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","topic","label","formatDuration","hours","h","getParts","pad","formatTime","Math","floor","round","number","toString","markers","distanceSum","line","toFixed","effortSum","route","speed","ascent","descent","diff","markerProfile","height","calculateHeightDifference","element_src","url","href","equal","x","y","distance","vec","subtract","hypot","theme","backgroundColor","textColor","darkerAccentColor","accentColor","lighterAccentColor","canvas","width","getContext","clearRect","padding","dotRadius","minHeight","Infinity","maxHeight","lineProfile","min","max","bounds","scale","project","vec.add","fac","followLineProfile","lineProfileDistanceSum","moveTo","lineTo","beginPath","topLeft","bottomLeft","bottomRight","gradient","createLinearGradient","addColorStop","fillStyle","lineWidth","lineCap","lineJoin","strokeStyle","stroke","font","textAlign","textBaseline","arc","PI","fillText","meters","log2","size","fillRect","drawProfile","effort","duration","iterations","window","isNaN","res","calculate","csv","row","fields","f","join","URL","createObjectURL","Blob","download","click","fetchProfile","ensureInputPoints","resolution","geometry","coordinates","fetch","method","headers","body","JSON","stringify","ok","json","profile","point","easting","northing","alts","COMB","some","vec.distance","recalculate","calculateDistanceSum","rise","slope","abs","calculateEffort","calculateSum","_","values","sum","importFile","file","reject","reader","FileReader","result","readAsText","readFile","content","async","xmlString","xml","DOMParser","parseFromString","querySelector","parseXml","endsWith","lines","coords","str","long","lat","split","convertCoordinates","placemarks","querySelectorAll","placemark","points","innerHTML","trim","s","readKml","segments","segment","nameElements","nameElement","parentElement","waypoints","waypoint","readGpx","connected","findConnectedLines","reverseFirst","reverse","reverseSecond","j","lastPoint","matches","vec.equal","duplicates","marker","unassigned","sort","buildRoute","loadProfiles","static","lng","WGStoCHy","WGStoCHx","lat_aux","DECtoSEX","lng_aux","pow","CHtoWGSlng","CHtoWGSlat","y_aux","x_aux","angle","deg","parseInt","WGStoCH","Number","areEqual","files","e","dataTransfer","print","reverseRoute","app","property","replace","toLowerCase","getComputedStyle","getPropertyValue","applyStyles"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAEhF,IAAIE,EA84BAC,EA1nBJ,SAASC,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,GAElC,OADAnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,GAE1D,SAASG,EAAgBtC,GACrB,OAAO,SAAUiC,GAGb,OAFAA,EAAMM,iBAECvC,EAAGwC,KAAKC,KAAMR,IAwB7B,SAASS,EAAK1B,EAAM2B,EAAWC,GACd,MAATA,EACA5B,EAAK6B,gBAAgBF,GAChB3B,EAAK8B,aAAaH,KAAeC,GACtC5B,EAAK+B,aAAaJ,EAAWC,GAkDrC,SAASI,EAAUJ,GACf,MAAiB,KAAVA,EAAe,MAAQA,EAkIlC,SAASK,EAASrB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKsB,YAAcrB,IACnBD,EAAKC,KAAOA,GAEpB,SAASsB,EAAgBC,EAAOR,GAC5BQ,EAAMR,MAAiB,MAATA,EAAgB,GAAKA,EAqTvC,SAASS,EAAsBC,GAC3BzC,EAAoByC,EAExB,SAASC,IACL,IAAK1C,EACD,MAAM,IAAI2C,MAAM,oDACpB,OAAO3C,EA2CX,SAAS4C,EAAOH,EAAWrB,GACvB,MAAMyB,EAAYJ,EAAUK,GAAGD,UAAUzB,EAAM2B,MAC3CF,GAEAA,EAAUG,QAAQvD,SAAQN,GAAMA,EAAGwC,KAAKC,KAAMR,KAItD,MAAM6B,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBtE,GACzBgE,EAAiBO,KAAKvE,GAuB1B,MAAMwE,EAAiB,IAAIC,IAC3B,IAAIC,EAAW,EACf,SAASC,IACL,MAAMC,EAAkB/D,EACxB,EAAG,CAGC,KAAO6D,EAAWZ,EAAiBe,QAAQ,CACvC,MAAMvB,EAAYQ,EAAiBY,GACnCA,IACArB,EAAsBC,GACtBwB,EAAOxB,EAAUK,IAKrB,IAHAN,EAAsB,MACtBS,EAAiBe,OAAS,EAC1BH,EAAW,EACJX,EAAkBc,QACrBd,EAAkBgB,KAAlBhB,GAIJ,IAAK,IAAIiB,EAAI,EAAGA,EAAIhB,EAAiBa,OAAQG,GAAK,EAAG,CACjD,MAAMC,EAAWjB,EAAiBgB,GAC7BR,EAAeU,IAAID,KAEpBT,EAAeW,IAAIF,GACnBA,KAGRjB,EAAiBa,OAAS,QACrBf,EAAiBe,QAC1B,KAAOZ,EAAgBY,QACnBZ,EAAgBc,KAAhBd,GAEJI,GAAmB,EACnBG,EAAeY,QACf/B,EAAsBuB,GAE1B,SAASE,EAAOnB,GACZ,GAAoB,OAAhBA,EAAG0B,SAAmB,CACtB1B,EAAGmB,SACH1E,EAAQuD,EAAG2B,eACX,MAAMC,EAAQ5B,EAAG4B,MACjB5B,EAAG4B,MAAQ,EAAE,GACb5B,EAAG0B,UAAY1B,EAAG0B,SAASG,EAAE7B,EAAG8B,IAAKF,GACrC5B,EAAG+B,aAAapF,QAAQgE,IAiBhC,MAAMqB,EAAW,IAAIlB,IACrB,IAAImB,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACR1F,EAAQwF,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMlB,IACfW,EAASS,OAAOF,GAChBA,EAAMlB,EAAEmB,IAGhB,SAASE,EAAeH,EAAOC,EAAO9E,EAAQ4D,GAC1C,GAAIiB,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAExB,MAAK,KACVoB,EAASS,OAAOF,GACZjB,IACI5D,GACA6E,EAAMK,EAAE,GACZtB,QAGRiB,EAAMI,EAAEH,IAqOhB,SAASK,EAAeC,EAASC,GAC7B,MAAMC,EAAQD,EAAKC,MAAQ,GAC3B,SAAS7B,EAAOlB,EAAMgD,EAAOC,EAAKjE,GAC9B,GAAI8D,EAAKC,QAAUA,EACf,OACJD,EAAKI,SAAWlE,EAChB,IAAImE,EAAYL,EAAKjB,SACTuB,IAARH,IACAE,EAAYA,EAAUlD,QACtBkD,EAAUF,GAAOjE,GAErB,MAAMsD,EAAQtC,IAAS8C,EAAKO,QAAUrD,GAAMmD,GAC5C,IAAIG,GAAc,EACdR,EAAKR,QACDQ,EAAKS,OACLT,EAAKS,OAAO7G,SAAQ,CAAC4F,EAAOlB,KACpBA,IAAM4B,GAASV,IACfL,IACAQ,EAAeH,EAAO,EAAG,GAAG,KACpBQ,EAAKS,OAAOnC,KAAOkB,IACnBQ,EAAKS,OAAOnC,GAAK,SAGzBgB,QAKRU,EAAKR,MAAMK,EAAE,GAEjBL,EAAMH,IACNE,EAAcC,EAAO,GACrBA,EAAMkB,EAAEV,EAAKW,QAASX,EAAKvF,QAC3B+F,GAAc,GAElBR,EAAKR,MAAQA,EACTQ,EAAKS,SACLT,EAAKS,OAAOP,GAASV,GACrBgB,GACAvC,IAGR,IAv3CgB/B,EAu3CD6D,IAt3CkB,iBAAV7D,GAA4C,mBAAfA,EAAM0E,KAs3CjC,CACrB,MAAMzG,EAAoB0C,IAc1B,GAbAkD,EAAQa,MAAK1E,IACTS,EAAsBxC,GACtBiE,EAAO4B,EAAKY,KAAM,EAAGZ,EAAK9D,MAAOA,GACjCS,EAAsB,SACvBkE,IAIC,GAHAlE,EAAsBxC,GACtBiE,EAAO4B,EAAKc,MAAO,EAAGd,EAAKa,MAAOA,GAClClE,EAAsB,OACjBqD,EAAKe,SACN,MAAMF,KAIVb,EAAKO,UAAYP,EAAKgB,QAEtB,OADA5C,EAAO4B,EAAKgB,QAAS,IACd,MAGV,CACD,GAAIhB,EAAKO,UAAYP,EAAKY,KAEtB,OADAxC,EAAO4B,EAAKY,KAAM,EAAGZ,EAAK9D,MAAO6D,IAC1B,EAEXC,EAAKI,SAAWL,EAh5CxB,IAAoB7D,EAqvDpB,SAAS+E,EAAiBzB,GACtBA,GAASA,EAAMH,IAKnB,SAAS6B,EAAgBtE,EAAWvC,EAAQI,EAAQ0G,GAChD,MAAMxC,SAAEA,EAAQyC,SAAEA,EAAQC,WAAEA,EAAUrC,aAAEA,GAAiBpC,EAAUK,GACnE0B,GAAYA,EAAS+B,EAAErG,EAAQI,GAC1B0G,GAEDvD,GAAoB,KAChB,MAAM0D,EAAiBF,EAASG,IAAIlI,GAAKmI,OAAO3H,GAC5CwH,EACAA,EAAWxD,QAAQyD,GAKnB5H,EAAQ4H,GAEZ1E,EAAUK,GAAGmE,SAAW,MAGhCpC,EAAapF,QAAQgE,GAEzB,SAAS6D,EAAkB7E,EAAW8E,GAClC,MAAMzE,EAAKL,EAAUK,GACD,OAAhBA,EAAG0B,WACHjF,EAAQuD,EAAGoE,YACXpE,EAAG0B,UAAY1B,EAAG0B,SAASkB,EAAE6B,GAG7BzE,EAAGoE,WAAapE,EAAG0B,SAAW,KAC9B1B,EAAG8B,IAAM,IAGjB,SAAS4C,EAAW/E,EAAW0B,IACI,IAA3B1B,EAAUK,GAAG4B,MAAM,KACnBzB,EAAiBS,KAAKjB,GArzBrBe,IACDA,GAAmB,EACnBH,EAAiBoD,KAAK3C,IAqzBtBrB,EAAUK,GAAG4B,MAAM+C,KAAK,IAE5BhF,EAAUK,GAAG4B,MAAOP,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASuD,EAAKjF,EAAWnB,EAASqG,EAAUC,EAAiBC,EAAWC,EAAOC,EAAerD,EAAQ,EAAE,IACpG,MAAMsD,EAAmBhI,EACzBwC,EAAsBC,GACtB,MAAMK,EAAKL,EAAUK,GAAK,CACtB0B,SAAU,KACVI,IAAK,KAELkD,MAAAA,EACA7D,OAAQhF,EACR4I,UAAAA,EACAI,MAAO7I,IAEP6H,SAAU,GACVC,WAAY,GACZgB,cAAe,GACfzD,cAAe,GACfI,aAAc,GACdsD,QAAS,IAAIC,IAAI9G,EAAQ6G,UAAYH,EAAmBA,EAAiBlF,GAAGqF,QAAU,KAEtFtF,UAAWzD,IACXsF,MAAAA,EACA2D,YAAY,EACZC,KAAMhH,EAAQpB,QAAU8H,EAAiBlF,GAAGwF,MAEhDP,GAAiBA,EAAcjF,EAAGwF,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAzF,EAAG8B,IAAM+C,EACHA,EAASlF,EAAWnB,EAAQwG,OAAS,IAAI,CAAC3D,EAAGqE,KAAQC,KACnD,MAAM1G,EAAQ0G,EAAKzE,OAASyE,EAAK,GAAKD,EAOtC,OANI1F,EAAG8B,KAAOiD,EAAU/E,EAAG8B,IAAIT,GAAIrB,EAAG8B,IAAIT,GAAKpC,MACtCe,EAAGuF,YAAcvF,EAAGmF,MAAM9D,IAC3BrB,EAAGmF,MAAM9D,GAAGpC,GACZwG,GACAf,EAAW/E,EAAW0B,IAEvBqE,KAET,GACN1F,EAAGmB,SACHsE,GAAQ,EACRhJ,EAAQuD,EAAG2B,eAEX3B,EAAG0B,WAAWoD,GAAkBA,EAAgB9E,EAAG8B,KAC/CtD,EAAQpB,OAAQ,CAChB,GAAIoB,EAAQoH,QAAS,CAEjB,MAAMC,EA91ClB,SAAkBhI,GACd,OAAOiI,MAAMC,KAAKlI,EAAQmI,YA61CJC,CAASzH,EAAQpB,QAE/B4C,EAAG0B,UAAY1B,EAAG0B,SAASwE,EAAEL,GAC7BA,EAAMlJ,QAAQe,QAIdsC,EAAG0B,UAAY1B,EAAG0B,SAASU,IAE3B5D,EAAQ2H,OACR7D,EAAc3C,EAAUK,GAAG0B,UAC/BuC,EAAgBtE,EAAWnB,EAAQpB,OAAQoB,EAAQhB,OAAQgB,EAAQ0F,eAEnElD,IAEJtB,EAAsBwF,GAkD1B,MAAMkB,EACFC,WACI7B,EAAkB1F,KAAM,GACxBA,KAAKuH,SAAWlK,EAEpBmK,IAAIrG,EAAMqB,GACN,MAAMvB,EAAajB,KAAKkB,GAAGD,UAAUE,KAAUnB,KAAKkB,GAAGD,UAAUE,GAAQ,IAEzE,OADAF,EAAUa,KAAKU,GACR,KACH,MAAM2B,EAAQlD,EAAUwG,QAAQjF,IACjB,IAAX2B,GACAlD,EAAUyG,OAAOvD,EAAO,IAGpCwD,KAAKC,GA73DT,IAAkBC,EA83DN7H,KAAK8H,QA93DCD,EA83DkBD,EA73DG,IAA5BnK,OAAOsK,KAAKF,GAAKzF,UA83DhBpC,KAAKkB,GAAGuF,YAAa,EACrBzG,KAAK8H,MAAMF,GACX5H,KAAKkB,GAAGuF,YAAa,qDCv6DHzD,2DAA9BvE,mCAA8BuE,yDAHfhE,0KCIqEgE,mBAAlE,MAATA,KAAgB,eAAiBA,4EAA1CvE,mCAAoFuE,kBAAlE,MAATA,KAAgB,eAAiBA,2EAJ3BgF,EAAQ,eACRC,EAAQ,qKCFhB,SAASC,EAAeC,GAC3B,MAAMC,EAACA,EAACzD,EAAEA,GAAK0D,GAASF,GACxB,MAAO,GAAGC,KAAKE,GAAI3D,KAGhB,SAAS4D,GAAWJ,GACvB,MAAMC,EAACA,EAACzD,EAAEA,GAAK0D,GAASF,GACxB,MAAO,GAAGG,GAAIF,EAAI,OAAOE,GAAI3D,KAGjC,SAAS0D,GAASF,GACd,MAAMC,EAAII,KAAKC,MAAMN,GAErB,MAAO,CAACC,EAAAA,EAAGzD,EADD6D,KAAKE,MAAoB,IAAbP,EAAQC,KAIlC,SAASE,GAAIK,GACT,OAAOA,EAAS,GAAK,IAAIA,IAAWA,EAAOC,kHCOpC5F,KAAM6F,QAAQ,GAAG7J,WAClBgE,KAAM6F,QAAQ7F,KAAM6F,QAAQzG,OAAS,GAAGpD,WAC9BwJ,KAAKE,MAAM1F,YAAqBwF,KAAKE,MAAM1F,aACjDA,KAAM8F,YAAY9F,KAAM+F,KAAK3G,OAAS,GAAK,KAAM4G,QAAQ,SAC1DhG,KAAMiG,UAAUjG,KAAM6F,QAAQzG,OAAS,GAAG4G,QAAQ,SAEpDd,EAAelF,KAAMiG,UAAUjG,KAAM6F,QAAQzG,OAAS,GAAKY,gEAR7D,0CAEkC,2CACsB,2CAC1B,UAAM,4BAA2B,oBAAY,oCACV,qBAAa,oCACrB,6CAA+C,oCAC5FA,UAAM,wBAAgB,kCACkC,iCANtEvE,gBAA8BA,kBAC/BA,gBAAqDA,kBAC3CA,gCAAgCA,uBAA8BA,kBACrEA,uBAAwEA,kBACxEA,yCAAkGA,kBAC1FA,uBAAoBA,kBAC9BA,uBAA4EA,8CANxEuE,KAAM6F,QAAQ,GAAG7J,uCAClBgE,KAAM6F,QAAQ7F,KAAM6F,QAAQzG,OAAS,GAAGpD,uCAC9BwJ,KAAKE,MAAM1F,wCAAqBwF,KAAKE,MAAM1F,yCACjDA,KAAM8F,YAAY9F,KAAM+F,KAAK3G,OAAS,GAAK,KAAM4G,QAAQ,qCAC1DhG,KAAMiG,UAAUjG,KAAM6F,QAAQzG,OAAS,GAAG4G,QAAQ,gCAC1ChG,2BACVkF,EAAelF,KAAMiG,UAAUjG,KAAM6F,QAAQzG,OAAS,GAAKY,wUAzBvDkG,YACAC,sHAENC,OAAAA,EAAQC,QAAAA,YAEsBH,OAC3BE,EAAS,EAAGC,EAAU,UACjB9G,EAAI,EAAGA,EAAI2G,EAAML,QAAQzG,OAAQG,WAChC+G,EAAOJ,EAAMK,cAAchH,GAAGiH,OAASN,EAAMK,cAAchH,EAAI,GAAGiH,OACpEF,EAAO,EACPF,GAAUE,EAEVD,GAAWC,SAGVF,OAAAA,EAAQC,QAAAA,GAZGI,CAA0BP,kPJwBtD,IAAuBQ,EAAaC,0eKnBzB,8cLmBYD,QAAaC,kBAC3BxL,IACDA,EAAuBc,SAASC,cAAc,MAElDf,EAAqByL,KAAOD,EACrBD,IAAgBvL,EAAqByL,kIKjChDnL,kBAIAA,SACIJ,OACIA,cACAA,cACAA,cACAA,iCACAA,cACAA,cAEJA,wLCjBG,SAASwL,GAAM5L,EAAGC,GACrB,OAAOD,EAAE6L,IAAM5L,EAAE4L,GAAK7L,EAAE8L,IAAM7L,EAAE6L,EAmB7B,SAASC,GAAS/L,EAAGC,GACxB,OALmB+L,EARhB,SAAkBhM,EAAGC,GACxB,MAAO,CAAE4L,EAAG7L,EAAE6L,EAAI5L,EAAE4L,EAAGC,EAAG9L,EAAE8L,EAAI7L,EAAE6L,GAYpBG,CAAShM,EAAGD,GAJnBuK,KAAK2B,MAAMF,EAAIH,EAAGG,EAAIF,GAD1B,IAAgBE,EChBhB,MAAMG,GAAQ,CACjBC,gBAAiB,KACjBC,UAAW,KACXC,kBAAmB,KACnBC,YAAa,KACbC,mBAAoB,yFCSxBhM,+EATQiM,SAFOxB,oFAIJwB,QACHA,EAAOC,MAAQ,WACfD,EAAOlB,OAAS,OCNjB,SAAqBN,EAAOwB,GAC/B,MAAM1H,EAAM0H,EAAOE,WAAW,MAC9B5H,EAAI6H,UAAU,EAAG,EAAGH,EAAOC,MAAOD,EAAOlB,QAEzC,MACMsB,EAAUC,GAKhB,IAAIC,EAAYC,EAAAA,EACZC,GAAY,EAAA,EAChB,IAAK,IAAInI,KAAKmG,EAAMiC,YAChBH,EAAYxC,KAAK4C,IAAIJ,EAAWjI,EAAEyG,QAClC0B,EAAY1C,KAAK6C,IAAIH,EAAWnI,EAAEyG,QAEtC,MAAM8B,EAAS,CACXxB,EAAGZ,EAAMJ,YAAYI,EAAMJ,YAAY1G,OAAS,GAChD2H,EAAGmB,EAAYF,GAEbO,EAAQ/C,KAAK4C,KACdV,EAAOC,MAAQ,IAAeW,EAAOxB,GACrCY,EAAOlB,OAAS,GAfN,IAe8B8B,EAAOvB,GAGpDW,EAAOC,MAAQnC,KAAKC,MAAM6C,EAAOxB,EAAIyB,EAAQ,IAC7Cb,EAAOlB,OAAShB,KAAKC,MAAM6C,EAAOvB,EAAIwB,EAAQ,GAnB/B,IAqBf,MAAMC,EAAU,CAACxB,EAAUR,KAAWiC,OH3BtBxN,EAST,CAAE6L,GADSG,EGoBJ,CAAEH,EAAGE,EAAUD,EAAGiB,EAAYxB,IHnB5BM,GADO4B,EGoB+BH,GHnB7BxB,EAAGE,EAAIF,EAAI2B,GATjBxN,EG6Bf,CAAE4L,EAAGgB,EAASf,EAAGW,EAAOlB,OAASsB,EAvBtB,IHLR,CAAEhB,EAAG7L,EAAE6L,EAAI5L,EAAE4L,EAAGC,EAAG9L,EAAE8L,EAAI7L,EAAE6L,GAD/B,IAAa9L,EAAGC,EAQD+L,EAAKyB,GGuBjBC,EAAoB,KACtB,IAAK,IAAIpJ,EAAI,EAAGA,EAAI2G,EAAMiC,YAAY/I,OAAQG,IAAK,CAC/C,MAAMQ,EAAIyI,EACNtC,EAAM0C,uBAAuBrJ,GAC7B2G,EAAMiC,YAAY5I,GAAGiH,QAEf,IAANjH,EACAS,EAAI6I,OAAO9I,EAAE+G,EAAG/G,EAAEgH,GAElB/G,EAAI8I,OAAO/I,EAAE+G,EAAG/G,EAAEgH,KAM9B/G,EAAI+I,YACJJ,IACA,MAAMK,EAAUR,EAAQ,EAAGN,GACrBe,EAAaT,EAAQ,EAAGR,GACxBkB,EAAcV,EAAQF,EAAOxB,EAAGkB,GACtChI,EAAI8I,OAAOI,EAAYpC,EAAGY,EAAOlB,QACjCxG,EAAI8I,OAAOG,EAAWnC,EAAGY,EAAOlB,QAChC,MAAM2C,EAAWnJ,EAAIoJ,qBAAqB,EAAGJ,EAAQjC,EAAG,EAAGW,EAAOlB,QAClE2C,EAASE,aAAa,EAAGjC,GAAMK,oBAC/B0B,EAASE,aAAa,EAAGjC,GAAMC,iBAC/BrH,EAAIsJ,UAAYH,EAChBnJ,EAAI6C,OAGJ7C,EAAI+I,YACJJ,IACA3I,EAAIuJ,UAzDc,EA0DlBvJ,EAAIwJ,QAAUxJ,EAAIyJ,SAAW,QAC7BzJ,EAAI0J,YAActC,GAAMI,YACxBxH,EAAI2J,SAGJ3J,EAAI4J,KAAO,uBACX5J,EAAI6J,UAAY,SAChB7J,EAAI8J,aAAe,SACnB,IAAK,IAAIvK,EAAI,EAAGA,EAAI2G,EAAMK,cAAcnH,OAAQG,IAAK,CACjD,MAAMQ,EAAIyI,EACNtC,EAAMJ,YAAYI,EAAML,QAAQtG,GAAG4B,OACnC+E,EAAMK,cAAchH,GAAGiH,QAE3BxG,EAAI+I,YACJ/I,EAAI+J,IAAIhK,EAAE+G,EAAG/G,EAAEgH,EA1ED,GA0Ee,EAAG,EAAIvB,KAAKwE,IACzChK,EAAIsJ,UAAYlC,GAAMG,kBACtBvH,EAAI6C,OAEJ7C,EAAIsJ,UAAYlC,GAAMC,gBACtBrH,EAAIiK,SAAS1K,EAAI,EAAGQ,EAAE+G,EAAG/G,EAAEgH,EAAI,IAInC,MAIMmD,EAHO,IAGS,GADR1E,KAAKC,MAAMD,KAAK2E,KADb,KADJ,IAEyC5B,KAEhD6B,EAAOF,EAAS3B,EACtBvI,EAAIsJ,UAAYlC,GAAME,UACtBtH,EAAIqK,SAAS3C,EAAOC,MAAQG,EAAUsC,EAAM1C,EAAOlB,OAAS,EAAe4D,EAPzD,GAQlBpK,EAAIqK,SAAS3C,EAAOC,MAAQG,EAAUsC,EAAM1C,EAAOlB,OAAS,EAR1C,EAQoE,GACtFxG,EAAIqK,SAAS3C,EAAOC,MAAQG,EATV,EAS+BJ,EAAOlB,OAAS,EAT/C,EASyE,GAC3FxG,EAAI6J,UAAY,QAChB7J,EAAI8J,aAAe,SACnB9J,EAAIiK,SAAS,GAAGC,MAAYxC,EAAOC,MAAQG,EAASJ,EAAOlB,OAAS,GD5FhE8D,CAAYpE,EAAOwB,kDAIRA,mNE6EiBlC,KAAKE,MAAM1F,KAAIsG,KAAKE,aACpBxG,KAAIsG,KAAKU,SAAShB,QAAQ,QAC1BhG,KAAIsG,KAAKiE,OAAOvE,QAAQ,QACxBd,EAAelF,KAAIsG,KAAKkE,uEAHI,iCACC,kCACF,mCACO,yQAL1D/O,SACIJ,cACAA,4BACAA,4BACAA,4BACAA,4BACAA,2BAJoBmK,KAAKE,MAAM1F,KAAIsG,KAAKE,gCACpBxG,KAAIsG,KAAKU,SAAShB,QAAQ,2BAC1BhG,KAAIsG,KAAKiE,OAAOvE,QAAQ,2BACxBd,EAAelF,KAAIsG,KAAKkE,iHAKxBxK,KAAImB,WAAenB,KAAIhE,UAC3BwJ,KAAKE,MAAM1F,KAAIwG,aACfxG,KAAIgH,SAAShB,QAAQ,QACrBhG,KAAIuK,OAAOvE,QAAQ,QACnBd,EAAelF,KAAIwK,eACnBjF,GAAWvF,KAAIwK,eAhBlCxK,KAAIsG,qHAYsC,iCACC,kCACF,mCACO,mTALrD7K,SACIJ,OAAiBA,mCACjBA,4BACAA,4BACAA,4BACAA,4BACAA,6BAhBC2E,KAAIsG,mFAWmBtG,KAAImB,8BAAenB,KAAIhE,6BAC3BwJ,KAAKE,MAAM1F,KAAIwG,gCACfxG,KAAIgH,SAAShB,QAAQ,2BACrBhG,KAAIuK,OAAOvE,QAAQ,2BACnBd,EAAelF,KAAIwK,kCACnBjF,GAAWvF,KAAIwK,qGAjBpCxK,0BAALZ,6eAsB6D,gFA/BnE3D,SACIJ,kEA6BJI,kBACAA,mDAAkBuE,0CAtBPA,aAALZ,+HAAAA,uFV+RN,SAAsBqL,EAAY9H,GAC9B,IAAK,IAAIpD,EAAI,EAAGA,EAAIkL,EAAWrL,OAAQG,GAAK,EACpCkL,EAAWlL,IACXkL,EAAWlL,GAAGuB,EAAE6B,sFUpXbuD,YACAC,KAEP/J,kHAEIsO,OAAOC,MAAMxE,IAAUA,EAAQ,OACnC/J,WAGe8J,EAAOC,SAChByE,aACGrL,EAAI,EAAGA,EAAI2G,EAAML,QAAQzG,OAAQG,IACtCqL,EAAIrL,IACA4B,MAAO5B,EAAI,EACXvD,KAAMkK,EAAML,QAAQtG,GAAGvD,KACvBwK,OAAQN,EAAMK,cAAchH,GAAGiH,OAC/BQ,SAAUd,EAAMJ,YAAYI,EAAML,QAAQtG,GAAG4B,OAAS,IACtDoJ,OAAQrE,EAAMD,UAAU1G,GACxBiL,SAAUtE,EAAMD,UAAU1G,GAAK4G,GAG/B5G,EAAI,IACJqL,EAAIrL,GAAG+G,MACHE,OAAQoE,EAAIrL,GAAGiH,OAASoE,EAAIrL,EAAI,GAAGiH,OACnCQ,SAAU4D,EAAIrL,GAAGyH,SAAW4D,EAAIrL,EAAI,GAAGyH,SACvCuD,OAAQrE,EAAMqE,OAAOhL,GACrBiL,SAAUI,EAAIrL,GAAGiL,SAAWI,EAAIrL,EAAI,GAAGiL,kBAI5CI,EAxBAC,CAAU3E,EAAOC,yBAwDlB2E,IA3BF,MACA,OACA,WACA,uBACA,qBACA,2BACA,sBACA,4BACA,kBACA,wBACA,kBAGS1O,EAAKoG,KAAKuI,IACnBA,EAAI5J,MACJ4J,EAAI/O,KACJ+O,EAAIvE,OACJuE,EAAIzE,MAAME,QAAU,EACpBuE,EAAI/D,SACJ+D,EAAIzE,MAAMU,UAAY,EACtB+D,EAAIR,OACJQ,EAAIzE,MAAMiE,QAAU,EACpBQ,EAAIP,SACJO,EAAIzE,MAAMkE,UAAY,EACtBO,EAAIP,aAIHhI,KAAKwI,GAAWA,EAAOxI,KAAKyI,OAAUA,OAAMC,KAAK,OACjDA,KAAK,MAEJjQ,EAAIgB,SAASC,cAAc,KACjCjB,EAAE2L,KAAOuE,IAAIC,oBAAoBC,MAAMP,IAAQ3M,KAAM,cACrDlD,EAAEqQ,SAAW,wBACbrQ,EAAEsQ,6FCrEH,SAASC,GAAazF,EAAM0F,EAAmBC,GAClD,MAAMC,EAAW,CACbxN,KAAM,aACNyN,YAAa7F,EAAKvD,KAAIzC,GAAK,CAACyF,KAAKE,MAAM3F,EAAE+G,GAAItB,KAAKE,MAAM3F,EAAEgH,OAE9D,OAAO8E,MAAM,uDAA2B,CACpCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,KAAM,4BAA4BP,eAA+BC,UAAmBO,KAAKC,UAAUP,OAElG9J,MAAM+I,IACH,GAAIA,EAAIuB,GACJ,OAAOvB,EAAIwB,OAEX,KAAM,kDAGbvK,MAAMzF,GAAS,IAAIsC,SAASC,IACzB,IAAI0N,EAAUjQ,EAAKoG,KAAIzC,KACnBuM,MAAO,CAAExF,EAAG/G,EAAEwM,QAASxF,EAAGhH,EAAEyM,UAC5BhG,OAAQzG,EAAE0M,KAAKC,SAIfjB,IACAY,EAAUA,EAAQ5J,QAAO1C,GAAKgG,EAAK4G,MAAKvI,GAAKwI,GAAa7M,EAAEuM,MAAOlI,GA3BnE,OA8BJzF,EAAQ0N,QAEXtK,OAAM,KAAQ,KAAM,iECP7B,SAAS8K,GAAY3G,GACjBA,EAAMJ,YAAcgH,GAAqB5G,EAAMH,MAC/CG,EAAM0C,uBAAyBkE,GAAqB5G,EAAMiC,YAAY3F,KAAIzC,GAAKA,EAAEuM,SACjFpG,EAAMqE,OAqBV,SAAyBrE,GACrB,MAAMqE,EAAS,GACfA,EAAO,GAAK,EACZ,IAAK,IAAIhL,EAAI,EAAGA,EAAI2G,EAAML,QAAQzG,OAAQG,IAAK,CAC3C,MAAMjF,EAAM4L,EAAMJ,YAAYI,EAAML,QAAQtG,GAAG4B,OAAS+E,EAAMJ,YAAYI,EAAML,QAAQtG,EAAI,GAAG4B,OACzF4L,EAAO7G,EAAMK,cAAchH,GAAGiH,OAASN,EAAMK,cAAchH,EAAI,GAAGiH,OAClEwG,EAAQD,EAAOzS,EAErBiQ,EAAOhL,GAAKjF,EAAM,IACd0S,EAAQ,EACRzC,EAAOhL,IAAMwN,EAAO,IACbC,GAAS,KAChBzC,EAAOhL,IAAMiG,KAAKyH,IAAIF,GAAQ,KAGtC,OAAOxC,EApCQ2C,CAAgBhH,GAC/BA,EAAMD,UAAYkH,GAAajH,EAAMqE,QAGzC,SAASuC,GAAqB/G,GAG1B,OAAOoH,GAFWpH,EACbvD,KAAI,CAAC4K,EAAG7N,IAAMqN,GAAa7G,EAAKP,KAAK6C,IAAI,EAAG9I,EAAI,IAAKwG,EAAKxG,OAInE,SAAS4N,GAAaE,GAClB,MAAMzC,EAAM,GACZ,IAAI0C,EAAM,EACV,IAAK,IAAI/N,EAAI,EAAGA,EAAI8N,EAAOjO,OAAQG,IAC/B+N,GAAOD,EAAO9N,GACdqL,EAAIrL,GAAK+N,EAEb,OAAO1C,EC1CJ,SAAS2C,GAAWC,GACvB,OAaJ,SAAkBA,GACd,OAAO,IAAI9O,SAAQ,CAACC,EAAS8O,KACzB,MAAMC,EAAS,IAAIC,WACnBD,EAAO/Q,iBAAiB,QAAQ,IAAMgC,EAAQ+O,EAAOE,UACrDF,EAAO/Q,iBAAiB,SAAS,IAAM8Q,EAAO,4CAC9CC,EAAOG,WAAWL,MAlBfM,CAASN,GACX3L,MAAMkM,GAqBfC,eAAwBC,GACpB,MACMC,GADS,IAAIC,WACAC,gBAAgBH,EAAW,mBAC9C,GAAIC,EAAIG,cAAc,eAClB,KAAM,8CAEV,OAAOH,EA3BgBI,CAASP,KAC3BlM,MAAMqM,GACCV,EAAKxR,KAAKuS,SAAS,QA4BnCP,eAAuBE,GACnB,MAAMM,EAAQ,GACR3I,EAAU,GAEV4I,EAAUC,IACZ,MAAOC,EAAMC,GAAOF,EAAIG,MAAM,KAC9B,OAAOC,GAAmBF,EAAKD,IAG7BI,EAAab,EAAIc,iBAAiB,aACxC,IAAK,IAAIC,KAAaF,EAAY,CAE9B,GAAIE,EAAUZ,cAAc,cAAe,CACvC,MAAMa,EAASD,EACVZ,cAAc,0BACdc,UACAC,OACAP,MAAM,KACNrM,KAAI6M,GAAKZ,EAAOY,KACrBb,EAAM1P,KAAKoQ,GAIf,GAAID,EAAUZ,cAAc,SAAU,CAClC,MAAMrS,EAAOiT,EACRZ,cAAc,QACdc,UACAC,OACC9C,EAAQmC,EAAOQ,EAChBZ,cAAc,qBACdc,WACLtJ,EAAQ/G,KAAK,CAAE9C,KAAAA,EAAMsQ,MAAAA,KAI7B,MAAO,CAAEkC,MAAAA,EAAO3I,QAAAA,GA9DGyJ,CAAQpB,GACRV,EAAKxR,KAAKuS,SAAS,QAgE1CP,eAAuBE,GACnB,MAAMM,EAAQ,GACR3I,EAAU,GAEV4I,EAAU1O,GAAM+O,GAClB/O,EAAE1C,aAAa,OAAQ0C,EAAE1C,aAAa,QAGpCkS,EAAWrB,EAAIc,iBAAiB,UACtC,IAAK,IAAIQ,KAAWD,EAAU,CAC1B,MAAML,EAASlL,MAAMC,KAAKuL,EAAQR,iBAAiB,UAC9CxM,KAAIzC,GAAK0O,EAAO1O,KACrByO,EAAM1P,KAAKoQ,GAIf,MAAMO,EAAevB,EAAIc,iBAAiB,gBAC1C,IAAK,IAAIU,KAAeD,EAAc,CAClC,MAAMzT,EAAO0T,EACRP,UACAC,OACC9C,EAAQmC,EAAOiB,EAAYC,eACjC9J,EAAQ/G,KAAK,CAAE9C,KAAAA,EAAMsQ,MAAAA,IAIzB,GAAuB,IAAnBzG,EAAQzG,OAAc,CACtB,MAAMwQ,EAAY1B,EAAIc,iBAAiB,OACvC,IAAK,IAAIa,KAAYD,EAAW,CAC5B,MAAM5T,EAAO6T,EACRxB,cAAc,QACdc,UACAC,OACC9C,EAAQmC,EAAOoB,GACrBhK,EAAQ/G,KAAK,CAAE9C,KAAAA,EAAMsQ,MAAAA,KAI7B,MAAO,CAAEkC,MAAAA,EAAO3I,QAAAA,GArGGiK,CAAQ5B,QADZ,IAIVrM,MAAK,EAAG2M,MAAAA,EAAO3I,QAAAA,KA2GxBmI,eAA0BQ,EAAO3I,GAE7B,GAAqB,IAAjB2I,EAAMpP,OACN,KAAM,iCAEV,GAAuB,IAAnByG,EAAQzG,OACR,KAAM,qCAIV,KAAOoP,EAAMpP,OAAS,GAAG,CACrB,MAAM2Q,EAAYC,GAAmBxB,GACrC,GAAiB,MAAbuB,EACA,KAAM,kEAGNA,EAAUE,cACVzB,EAAMuB,EAAUxQ,GAAG2Q,UAEnBH,EAAUI,eACV3B,EAAMuB,EAAUK,GAAGF,UAGvB1B,EAAMuB,EAAUxQ,GAAGT,QAAQ0P,EAAMuB,EAAUK,IAE3C5B,EAAM9J,OAAOqL,EAAUK,EAAG,GAE9B,MAAMrK,EAAOyI,EAAM,GAGnB,IAAI6B,EAAY,KAChB,IAAK,IAAI9Q,EAAI,EAAGA,EAAIwG,EAAK3G,OAAQG,IAAK,CAElC,MAAM+Q,EAAUzK,EACXpD,QAAOd,GAAkB,MAAb0O,IAAsBE,GAAU5O,EAAE2K,MAAO+D,KACrD5N,QAAOd,GAAKiL,GAAajL,EAAE2K,MAAOvG,EAAKxG,IA1JpC,KA2JR,GAAuB,IAAnB+Q,EAAQlR,OACR,SAIJ,MAAMoR,EAAaF,EACd7N,QAAOd,GAAgB,MAAXA,EAAER,QACnB,GAAImP,EAAQlR,OAAS,EAAG,CAIpB,KAAM,oCAHOoR,EACRhO,KAAIb,GAAK,IAAIA,EAAE3F,UACfkP,KAAK,SAKd,MAAMuF,EAASH,EAAQ,GACH,MAAhBG,EAAOtP,MAEPsP,EAAOtP,MAAQ5B,EAIfsG,EAAQ/G,KAAK,CACT9C,KAAMyU,EAAOzU,KACbsQ,MAAOmE,EAAOnE,MACdnL,MAAO5B,IAIf8Q,EAAYI,EAAOnE,MAIvB,MAAMoE,EAAa7K,EACdpD,QAAOd,GAAgB,MAAXA,EAAER,QACnB,GAAIuP,EAAWtR,OAAS,EAAG,CAIvB,KAAM,yDAHOsR,EACRlO,KAAIb,GAAK,IAAIA,EAAE3F,UACfkP,KAAK,SAOd,OAFArF,EAAQ8K,MAAK,CAAC1V,EAAGC,IAAMD,EAAEkG,MAAQjG,EAAEiG,QAE5B,CAAE4E,KAAAA,EAAMF,QAAAA,GA5LmB+K,CAAWpC,EAAO3I,KAC/ChE,MAAMqE,GDdR8H,eAA4B9H,GAQ/B,OANAA,EAAMiC,kBAAoBqD,GAAatF,EAAMH,MAAM,EAAO,KAC1DG,EAAMK,oBAAsBiF,GAAatF,EAAML,QAAQrD,KAAIb,GAAKuE,EAAMH,KAAKpE,EAAER,UAAS,EAAM+E,EAAML,QAAQzG,QAG1GyN,GAAY3G,GAELA,ECMc2K,CAAa3K,KAqGtC,SAAS4I,GAAmBF,EAAKD,GAC7B,MAAO7H,EAAGC,GCxFP,MACH+J,eAAelC,EAAKmC,GAChB,MAAO,CACH/T,KAAKgU,SAASpC,EAAKmC,GACnB/T,KAAKiU,SAASrC,EAAKmC,IAK3BD,gBAAgBlC,EAAKmC,GAMjB,MAAMG,IAJNtC,EAAM5R,KAAKmU,SAASvC,IAIG,WAAa,IAC9BwC,IAJNL,EAAM/T,KAAKmU,SAASJ,IAIG,SAAW,IAUlC,OAPU,UACN,UAAYG,EACZ,QAAU1L,KAAK6L,IAAID,EAAS,GAC5B,MAAQ5L,KAAK6L,IAAIH,EAAS,GAC1B,OAAS1L,KAAK6L,IAAID,EAAS,GAAKF,EAChC,OAAS1L,KAAK6L,IAAIH,EAAS,GAMnCJ,gBAAgBlC,EAAKmC,GAMjB,MAAMG,IAJNtC,EAAM5R,KAAKmU,SAASvC,IAIG,WAAa,IAC9BwC,IAJNL,EAAM/T,KAAKmU,SAASJ,IAIG,SAAW,IASlC,OANU,UACN,UAAYK,EACZ,SAAWA,EAAUF,EACrB,IAAOE,EAAU5L,KAAK6L,IAAIH,EAAS,GACnC,MAAQ1L,KAAK6L,IAAID,EAAS,GAKlCN,eAAe/J,EAAGD,GACd,MAAO,CACH9J,KAAKsU,WAAWvK,EAAGD,GACnB9J,KAAKuU,WAAWxK,EAAGD,IAK3BgK,kBAAkB/J,EAAGD,GAGjB,MAAM0K,GAASzK,EAAI,KAAU,IACvB0K,GAAS3K,EAAI,KAAU,IAW7B,OAAa,KARD,WACR,SAAW2K,EACX,QAAWjM,KAAK6L,IAAIG,EAAO,GAC3B,QAAWhM,KAAK6L,IAAII,EAAO,GAC3B,MAASjM,KAAK6L,IAAIG,EAAO,GAAKC,EAC9B,KAASjM,KAAK6L,IAAII,EAAO,IAGV,GAIvBX,kBAAkB/J,EAAGD,GAGjB,MAAM0K,GAASzK,EAAI,KAAU,IACvB0K,GAAS3K,EAAI,KAAU,IAU7B,OAAa,KAPD,UACR,SAAW0K,EACX,QAAWA,EAAQC,EACnB,MAASD,EAAQhM,KAAK6L,IAAII,EAAO,GACjC,MAASjM,KAAK6L,IAAIG,EAAO,IAGV,GAIvBV,gBAAgBY,GAEZ,MAAMC,EAAMC,SAASF,GACftJ,EAAMwJ,SAAyB,IAAfF,EAAQC,IAI9B,OAH2C,IAAb,IAAfD,EAAQC,GAAavJ,GAGjB,GAANA,EAAmB,KAANuJ,IDbLE,QAAQC,OAAOlD,GAAMkD,OAAOnD,IACrD,MAAO,CAAE7H,EAAAA,EAAGC,EAAAA,GAuFhB,SAASiJ,GAAmBxB,GACxB,MAAMuD,EAAW,CAAC9W,EAAGC,IAAM0R,GAAa3R,EAAGC,GA5M/B,GA8MZ,IAAK,IAAIqE,EAAI,EAAGA,EAAIiP,EAAMpP,OAAQG,IAC9B,IAAK,IAAI6Q,EAAI7Q,EAAI,EAAG6Q,EAAI5B,EAAMpP,OAAQgR,IAAK,CACvC,GAAI2B,EAASvD,EAAMjP,GAAGiP,EAAMjP,GAAGH,OAAS,GAAIoP,EAAM4B,GAAG,IAEjD,MAAO,CAAE7Q,EAAAA,EAAG6Q,EAAAA,EAAGH,cAAc,EAAOE,eAAe,GAChD,GAAI4B,EAASvD,EAAMjP,GAAG,GAAIiP,EAAM4B,GAAG5B,EAAM4B,GAAGhR,OAAS,IAExD,MAAO,CAAEG,EAAAA,EAAG6Q,EAAAA,EAAGH,cAAc,EAAME,eAAe,GAC/C,GAAI4B,EAASvD,EAAMjP,GAAG,GAAIiP,EAAM4B,GAAG,IAEtC,MAAO,CAAE7Q,EAAAA,EAAG6Q,EAAAA,EAAGH,cAAc,EAAME,eAAe,GAC/C,GAAI4B,EAASvD,EAAMjP,GAAGiP,EAAMjP,GAAGH,OAAS,GAAIoP,EAAM4B,GAAG5B,EAAM4B,GAAGhR,OAAS,IAE1E,MAAO,CAAEG,EAAAA,EAAG6Q,EAAAA,EAAGH,cAAc,EAAOE,eAAe,GAM/D,OAAO,orBEpMgD,2NALnD1U,kBACAA,kBACAA,kBACAA,kBACAA,SACIJ,mCAEJI,oVAfQuE,efoYL7D,EAAK,6HepYA6D,efu4ChB,SAAmCiB,EAAMjB,EAAKF,GAC1C,MAAMwB,EAAYtB,EAAI5B,SAChBiD,SAAEA,GAAaJ,EACjBA,EAAKO,UAAYP,EAAKY,OACtBP,EAAUL,EAAK9D,OAASkE,GAExBJ,EAAKO,UAAYP,EAAKc,QACtBT,EAAUL,EAAKa,OAAST,GAE5BJ,EAAKR,MAAMV,EAAEuB,EAAWxB,6Ge54C0BE,wEAAvC,4IADHvE,kBACAA,gBAAmCJ,uBACnCI,2DAD0CuE,2MAH1CvE,wGAFHuE,MAASA,KAAM,gGAHxBvE,qUATQuW,EACAhR,SAHOkF,EAAQ,uFAKZ8L,GAASA,EAAM,QAClBhR,EAAUuM,GAAWyE,EAAM,IACtBnQ,MAAM+L,OAAW1H,EAAQ0H,oDAagBoE,EAAQ,sCARjCC,OAAMD,EAAQC,EAAEC,aAAaF,uMCOtDvW,4lBAoBuF,+FAGtB,ujBAd7DA,SACIJ,OACIA,OACIA,iCAGJA,OACIA,cACAA,cACAA,WAAiE2E,aACjE3E,cACAA,iCACAA,cACAA,cACAA,iCAGRA,OACIA,iCAGJA,OACIA,wEAXwC2E,kBAGlBmS,mGAL+CnS,UAAAA,+gBhB4sDrF,SAAcnC,EAAW7B,EAAMwD,GAC3B,MAAM2B,EAAQtD,EAAUK,GAAGgF,MAAMlH,QACnBuF,IAAVJ,IACAtD,EAAUK,GAAGmF,MAAMlC,GAAS3B,EAC5BA,EAAS3B,EAAUK,GAAG8B,IAAImB,6HA/vBlC,IAA4B5G,8BAAAA,WACxBiE,EAAgBM,KAAKvE,sLgBr+BX,MAATyF,uDAMa,MAATA,qVADTvE,iCAiCAA,wBAtCc,MAATuE,4SALQmS,KACLzH,OAAOyH,+BATPjM,EACAC,EAAQ,yBJGT,SAAsBD,GAEzBA,EAAMH,KAAKmK,UACXhK,EAAML,QAAQqK,UACdhK,EAAMiC,aAAa+H,UACnBhK,EAAMK,eAAe2J,UAGrBhK,EAAML,QAAQhL,SAAQ8G,GAAKA,EAAER,MAAQ+E,EAAMH,KAAK3G,OAASuC,EAAER,MAAQ,IAGnE0L,GAAY3G,GIXRkM,CAAalM,8CA4BgEC,+BCtC/EkM,GAAM,kEAAQ,CAAE/W,OAAQW,SAAS+P,cVIhC,WACH,IAAK,IAAI5K,KAAO3G,OAAOsK,KAAKqC,IAAQ,CAChC,MAAMkL,EAAW,KAAOlR,EAAImR,QAAQ,UAAW5Q,GAAM,IAAMA,EAAE6Q,gBAC7DpL,GAAMhG,GAAOsJ,OAAO+H,iBAAiBxW,SAAS+P,MAAM0G,iBAAiBJ,IUJ7EK"}