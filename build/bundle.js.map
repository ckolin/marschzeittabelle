{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/modules/formatting.js","../../src/Info.svelte","../../src/modules/vec.js","../../src/modules/theme.js","../../src/Profile.svelte","../../src/modules/drawing.js","../../src/Table.svelte","../../src/Introduction.svelte","../../src/modules/geoadmin.js","../../src/modules/route.js","../../src/modules/import.js","../../src/modules/swisstopo.js","../../src/Upload.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export function formatDuration(hours) {\r\n    const {h, m} = getParts(hours);\r\n    return `${h}:${pad(m)}`;\r\n}\r\n\r\nexport function formatTime(hours) {\r\n    const {h, m} = getParts(hours);\r\n    return `${pad(h % 24)}:${pad(m)}`;\r\n}\r\n\r\nfunction getParts(hours) {\r\n    const h = Math.floor(hours);\r\n    const m = Math.round((hours - h) * 60);\r\n    return {h, m};\r\n}\r\n\r\nfunction pad(number) {\r\n    return number < 10 ? `0${number}` : number.toString();\r\n}\r\n","<script>\r\n    import { formatDuration } from \"./modules/formatting.js\";\r\n\r\n    export let route;\r\n    export let speed;\r\n\r\n    $: ({ascent, descent} = calculateHeightDifference(route));\r\n\r\n    function calculateHeightDifference(route) {\r\n        let ascent = 0, descent = 0;\r\n        for (let i = 1; i < route.markers.length; i++) {\r\n            const diff = route.markerProfile[i].height - route.markerProfile[i - 1].height;\r\n            if (diff > 0) {\r\n                ascent += diff;\r\n            } else {\r\n                descent -= diff;\r\n            }\r\n        }\r\n        return { ascent, descent };\r\n    }\r\n</script>\r\n\r\nStart: <b>{route.markers[0].name}</b><br />\r\nEnde: <b>{route.markers[route.markers.length - 1].name}</b><br />\r\nAuf-/Abstieg: ↑ <b>{Math.round(ascent)} m</b> ↓ <b>{Math.round(descent)} m</b><br />\r\nDistanz: <b>{(route.distanceSum[route.line.length - 1] / 1000).toFixed(1)} km</b><br />\r\nAufwand: <b>{route.effortSum[route.markers.length - 1].toFixed(1)} Lkm</b><br />\r\nDauer: <b>{formatDuration(route.effortSum[route.markers.length - 1] / speed)} h</b><br />\r\n\r\n<style>\r\n</style>\r\n","export class Vec {\r\n    static add(a, b) {\r\n        return { x: a.x + b.x, y: a.y + b.y };\r\n    }\r\n\r\n    static subtract(a, b) {\r\n        return { x: a.x - b.x, y: a.y - b.y };\r\n    }\r\n\r\n    static scale(vec, fac) {\r\n        return { x: vec.x * fac, y: vec.y * fac };\r\n    }\r\n\r\n    static length(vec) {\r\n        return Math.hypot(vec.x, vec.y);\r\n    }\r\n\r\n    static distance(a, b) {\r\n        return Vec.length(Vec.subtract(b, a));\r\n    }\r\n}\r\n","export const theme = {\r\n    backgroundColor: null,\r\n    textColor: null,\r\n    darkerAccentColor: null,\r\n    accentColor: null,\r\n    lighterAccentColor: null\r\n};\r\n\r\nexport function applyStyles() {\r\n    for (let key of Object.keys(theme)) {\r\n        const property = \"--\" + key.replace(/[A-Z]/g, (m) => \"-\" + m.toLowerCase());\r\n        theme[key] = window.getComputedStyle(document.body).getPropertyValue(property);\r\n    }\r\n}\r\n","<script>\r\n    import { drawProfile } from \"./modules/drawing.js\";\r\n\r\n    export let route;\r\n\r\n    let canvas;\r\n\r\n    $: if (canvas) {\r\n        drawProfile(route, canvas);\r\n    }\r\n</script>\r\n\r\n<canvas bind:this={canvas} width=\"800\" height=\"150\" />\r\n\r\n<style>\r\n    @media print {\r\n        canvas {\r\n            max-width: 100%;\r\n        }\r\n    }\r\n</style>\r\n","import { Vec } from \"./vec.js\";\r\nimport { theme } from \"./theme.js\";\r\n\r\nexport function drawProfile(route, canvas) {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const dotRadius = 10;\r\n    const padding = dotRadius + 2;\r\n    const lineWidth = 4;\r\n    const bottom = 40;\r\n\r\n    // Figure out scale of drawing\r\n    let minHeight = Infinity;\r\n    let maxHeight = -Infinity;\r\n    for (let p of route.lineProfile) {\r\n        minHeight = Math.min(minHeight, p.height);\r\n        maxHeight = Math.max(maxHeight, p.height);\r\n    }\r\n    const bounds = {\r\n        x: route.distanceSum[route.distanceSum.length - 1],\r\n        y: maxHeight - minHeight\r\n    };\r\n    const scale = Math.min(\r\n        (canvas.width - 2 * padding) / bounds.x,\r\n        (canvas.height - 2 * padding - bottom) / bounds.y);\r\n\r\n    // Fit canavs to drawing\r\n    canvas.width = Math.ceil(bounds.x * scale + 2 * padding);\r\n    canvas.height = Math.ceil(bounds.y * scale + 2 * padding + bottom);\r\n\r\n    const project = (distance, height) => Vec.add(\r\n        Vec.scale({ x: distance, y: minHeight - height }, scale),\r\n        { x: padding, y: canvas.height - padding - bottom });\r\n\r\n    const followLineProfile = () => {\r\n        for (let i = 0; i < route.lineProfile.length; i++) {\r\n            const p = project(\r\n                route.lineProfileDistanceSum[i],\r\n                route.lineProfile[i].height);\r\n\r\n            if (i === 0) {\r\n                ctx.moveTo(p.x, p.y);\r\n            } else {\r\n                ctx.lineTo(p.x, p.y);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Draw area under line\r\n    ctx.beginPath();\r\n    followLineProfile();\r\n    const topLeft = project(0, maxHeight);\r\n    const bottomLeft = project(0, minHeight);\r\n    const bottomRight = project(bounds.x, minHeight);\r\n    ctx.lineTo(bottomRight.x, canvas.height);\r\n    ctx.lineTo(bottomLeft.x, canvas.height);\r\n    const gradient = ctx.createLinearGradient(0, topLeft.y, 0, canvas.height);\r\n    gradient.addColorStop(0, theme.lighterAccentColor);\r\n    gradient.addColorStop(1, theme.backgroundColor);\r\n    ctx.fillStyle = gradient;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.fill();\r\n    ctx.globalAlpha = 1;\r\n\r\n    // Draw line\r\n    ctx.beginPath();\r\n    followLineProfile();\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.lineCap = ctx.lineJoin = \"round\";\r\n    ctx.strokeStyle = theme.accentColor;\r\n    ctx.stroke();\r\n\r\n    // Draw dots and numbers\r\n    ctx.font = \"bold 14px sans-serif\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.textBaseline = \"middle\";\r\n    for (let i = 0; i < route.markerProfile.length; i++) {\r\n        const p = project(\r\n            route.distanceSum[route.markers[i].index],\r\n            route.markerProfile[i].height);\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(p.x, p.y, dotRadius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = theme.darkerAccentColor;\r\n        ctx.fill();\r\n\r\n        ctx.fillStyle = theme.backgroundColor;\r\n        ctx.fillText(i + 1, p.x, p.y + 0.5);\r\n    }\r\n}\r\n","<script>\r\n    import { formatDuration, formatTime } from \"./modules/formatting.js\";\r\n\r\n    export let route;\r\n    export let speed;\r\n\r\n    let data = [];\r\n\r\n    $: if (!window.isNaN(speed) && speed > 0) {\r\n        data = calculate(route, speed);\r\n    }\r\n\r\n    function calculate(route, speed) {\r\n        const res = [];\r\n        for (let i = 0; i < route.markers.length; i++) {\r\n            res[i] = {\r\n                index: i + 1,\r\n                name: route.markers[i].name,\r\n                height: route.markerProfile[i].height,\r\n                distance: route.distanceSum[route.markers[i].index] / 1000,\r\n                effort: route.effortSum[i],\r\n                duration: route.effortSum[i] / speed\r\n            };\r\n\r\n            if (i > 0) {\r\n                res[i].diff = {\r\n                    height: res[i].height - res[i - 1].height,\r\n                    distance: res[i].distance - res[i - 1].distance,\r\n                    effort: route.effort[i],\r\n                    duration: res[i].duration - res[i - 1].duration\r\n                };\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n</script>\r\n\r\n<table>\r\n    <tr>\r\n        <th>Wegpunkt</th>\r\n        <th>Höhe</th>\r\n        <th>Distanz</th>\r\n        <th>Aufwand</th>\r\n        <th>Dauer</th>\r\n        <th>Uhrzeit</th>\r\n    </tr>\r\n    {#each data as row}\r\n        {#if row.diff}\r\n            <tr class=\"alt\">\r\n                <td />\r\n                <td class=\"number\">{Math.round(row.diff.height)} m</td>\r\n                <td class=\"number\">{row.diff.distance.toFixed(1)} km</td>\r\n                <td class=\"number\">{row.diff.effort.toFixed(1)} Lkm</td>\r\n                <td class=\"number\">{formatDuration(row.diff.duration)} h</td>\r\n                <td />\r\n            </tr>\r\n        {/if}\r\n        <tr>\r\n            <td class=\"name\"><span>{row.index}</span> {row.name}</td>\r\n            <td class=\"number\">{Math.round(row.height)} m</td>\r\n            <td class=\"number\">{row.distance.toFixed(1)} km</td>\r\n            <td class=\"number\">{row.effort.toFixed(1)} Lkm</td>\r\n            <td class=\"number\">{formatDuration(row.duration)} h</td>\r\n            <td class=\"number\">{formatTime(row.duration)}</td>\r\n        </tr>\r\n    {/each}\r\n</table>\r\n\r\n<style>\r\n    table {\r\n        white-space: nowrap;\r\n    }\r\n\r\n    th {\r\n        text-align: left;\r\n    }\r\n\r\n    th, td {\r\n        padding-left: 1rem;\r\n    }\r\n\r\n    th:first-child, td:first-child {\r\n        padding-left: 0;\r\n    }\r\n    \r\n    .name {\r\n        font-weight: bold;\r\n        color: var(--darker-accent-color);\r\n    }\r\n    \r\n    .name span {\r\n        display: inline-block;\r\n        min-width: 1.3em;\r\n        border-radius: 1em;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        color: var(--background-color);\r\n        background: var(--darker-accent-color);\r\n    }\r\n\r\n    .alt {\r\n        color: var(--accent-color);\r\n    }\r\n\r\n    .number {\r\n        text-align: right;\r\n        font-family: \"Roboto Mono\", monospace;\r\n    }\r\n</style>\r\n","<div class=\"title\">\r\n<h1>Marschzeit&shy;tabelle<br />leicht gemacht.</h1>\r\n<p class=\"subtitle\">Wir übertragen deine Route automatisch in eine Marschzeittabelle, damit du dich auf die Wanderplanung konzentrieren kannst.</p>\r\n</div>\r\n<div class=\"tutorial\">\r\n    <div>\r\n        <h2>1. Route planen</h2>\r\n        <p>Route einzeichnen, Wegpunkte setzen - das kennst du bereits.</p>\r\n        <h2>2. Exportieren und hochladen</h2>\r\n        <p>In wenigen Klicks erledigt.</p>\r\n        <h2>3. Voilà!</h2>\r\n        <p>Schon hast du deine Marschzeittabelle. Jetzt noch Geschwindigkeit, Startzeit und Pausen anpassen.</p>\r\n    </div>\r\n    <img src=\"example.png\" alt=\"Beispiel\" />\r\n</div>\r\n\r\n<style>\r\n    .title {\r\n        text-align: center;\r\n    }\r\n    \r\n    h1 {\r\n        font-size: 4em;\r\n        font-weight: 900;\r\n        color: var(--darker-accent-color);\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    @media (max-width: 800px) {\r\n        h1 {\r\n            font-size: 3em;\r\n        }\r\n    }\r\n    \r\n    .subtitle {\r\n        font-size: 1.4em;\r\n    }\r\n\r\n    .tutorial {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 1rem;\r\n        margin: 2rem;\r\n    }\r\n\r\n    .tutorial div {\r\n        flex: 1 1 15rem;\r\n    }\r\n\r\n    .tutorial img {\r\n        width: 100%;\r\n        flex: 0 1 20rem;\r\n        border-radius: 1rem;\r\n        box-shadow: 1rem 1rem 2rem rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    h2 {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    p {\r\n        margin-top: 0;\r\n    }\r\n</style>","import { Vec } from \"./vec.js\";\r\n\r\nconst baseUrl = \"https://api3.geo.admin.ch/rest/services\";\r\nconst epsilon = 2;\r\n\r\nexport function fetchProfile(line, ensureInputPoints, resolution) {\r\n    const geometry = {\r\n        type: \"LineString\",\r\n        coordinates: line.map(p => [Math.round(p.x), Math.round(p.y)])\r\n    };\r\n    return fetch(`${baseUrl}/profile.json?sr=21781&distinct_points=${ensureInputPoints}&nb_points=${resolution}&geom=${JSON.stringify(geometry)}`)\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            } else {\r\n                throw \"Das Höhenprofil konnte nicht geladen werden.\";\r\n            }\r\n        })\r\n        .then((data) => new Promise((resolve) => {\r\n            let profile = data.map(p => ({\r\n                point: { x: p.easting, y: p.northing },\r\n                height: p.alts.COMB\r\n            }));\r\n\r\n            // Remove extra points not associated with a marker\r\n            if (ensureInputPoints) {\r\n                profile = profile.filter(p => line.some(l => Vec.distance(p.point, l) < epsilon));\r\n            }\r\n\r\n            resolve(profile);\r\n        }))\r\n        .catch(() => { throw \"Die Verbindung zu den swisstopo-Servern ist fehlgeschlagen.\" });\r\n}\r\n","import { Vec } from \"./vec.js\";\r\nimport { fetchProfile } from \"./geoadmin.js\";\r\n\r\nexport class Route {\r\n    constructor(line, markers) {\r\n        this.line = line;\r\n        this.markers = markers;\r\n    }\r\n\r\n    async loadProfiles() {\r\n        this.lineProfile = await fetchProfile(this.line, false, 100);\r\n        this.markerProfile = await fetchProfile(this.markers.map(m => this.line[m.index]), true, this.markers.length);\r\n        this.calculateDistances();\r\n        return this;\r\n    }\r\n\r\n    reverse() {\r\n        this.line.reverse();\r\n        this.markers.reverse();\r\n        this.markers.forEach(m => m.index = this.line.length - m.index - 1);\r\n        this.lineProfile?.reverse();\r\n        this.markerProfile?.reverse();\r\n        this.calculateDistances();\r\n    }\r\n\r\n    calculateDistances() {\r\n        this.distanceSum = calculateDistanceSum(this.line);\r\n        this.lineProfileDistanceSum = calculateDistanceSum(this.lineProfile.map(p => p.point));\r\n\r\n        this.effort = [];\r\n        this.effort[0] = 0;\r\n        for (let i = 1; i < this.markers.length; i++) {\r\n            const run = this.distanceSum[this.markers[i].index] - this.distanceSum[this.markers[i - 1].index];\r\n            const rise = this.markerProfile[i].height - this.markerProfile[i - 1].height;\r\n            const slope = rise / run;\r\n\r\n            this.effort[i] = run / 1000;\r\n            if (slope > 0) {\r\n                this.effort[i] += rise / 100;\r\n            } else if (slope < -0.2) {\r\n                this.effort[i] += Math.abs(slope) / 150;\r\n            }\r\n        }\r\n\r\n        this.effortSum = calculateSum(this.effort);\r\n    }\r\n}\r\n\r\nfunction calculateDistanceSum(line) {\r\n    const distances = line.map((_, i) => Vec.distance(line[Math.max(0, i - 1)], line[i]));\r\n    return calculateSum(distances);\r\n}\r\n\r\nfunction calculateSum(values) {\r\n    const res = [];\r\n    let sum = 0;\r\n    for (let i = 0; i < values.length; i++) {\r\n        sum += values[i];\r\n        res[i] = sum;\r\n    }\r\n    return res;\r\n}\r\n","import { Swisstopo } from \"./swisstopo.js\";\r\nimport { Vec } from \"./vec.js\";\r\nimport { Route } from \"./route.js\";\r\n\r\nconst epsilon = 10;\r\n\r\nexport function importFile(file) {\r\n    return readFile(file)\r\n        .then((content) => parseKml(content))\r\n        .then((route) => route.loadProfiles());\r\n}\r\n\r\nfunction readFile(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => resolve(reader.result));\r\n        reader.addEventListener(\"error\", () => reject(\"Die Datei konnte nicht gelesen werden.\"));\r\n        reader.readAsText(file);\r\n    });\r\n}\r\n\r\nasync function parseKml(kmlString) {\r\n    const parser = new DOMParser();\r\n    const kml = parser.parseFromString(kmlString, \"application/xml\");\r\n    if (kml.querySelector(\"parsererror\")) {\r\n        throw \"Die Datei ist nicht in gültigem KML-Format.\";\r\n    }\r\n\r\n    const lines = [];\r\n    const markers = [];\r\n\r\n    const placemarks = kml\r\n        .querySelectorAll(\"Placemark\");\r\n    for (let placemark of placemarks) {\r\n        // Find lines\r\n        if (placemark.querySelector(\"LineString\")) {\r\n            const points = placemark\r\n                .querySelector(\"LineString coordinates\")\r\n                .innerHTML\r\n                .trim()\r\n                .split(\" \")\r\n                .map(s => parseCoordinates(s));\r\n            lines.push(points);\r\n        }\r\n        // Find markers\r\n        if (placemark.querySelector(\"Point\")) {\r\n            const name = placemark\r\n                .querySelector(\"name\")\r\n                .innerHTML\r\n                .trim();\r\n            const point = parseCoordinates(\r\n                placemark.querySelector(\"Point coordinates\").innerHTML);\r\n            markers.push({ name, point });\r\n        }\r\n    }\r\n\r\n    // Check if route contains line and markers\r\n    if (lines.length === 0) {\r\n        throw \"Die Route enthält keine Linie.\"\r\n    }\r\n    if (markers.length === 0) {\r\n        throw \"Die Route enthält keine Wegpunkte.\"\r\n    }\r\n\r\n    // Merge disjointed lines\r\n    while (lines.length > 1) {\r\n        const connected = findConnectedLines(lines, epsilon);\r\n        if (connected == null) {\r\n            throw \"Die Route enthält Linien, die nicht miteinander verbunden sind.\";\r\n        }\r\n\r\n        if (connected.reverseFirst) {\r\n            lines[connected.i].reverse();\r\n        }\r\n        if (connected.reverseSecond) {\r\n            lines[connected.j].reverse();\r\n        }\r\n        // Append points of second line\r\n        lines[connected.i].push(...lines[connected.j]);\r\n        // Remove second line\r\n        lines.splice(connected.j, 1);\r\n    }\r\n    const line = lines[0];\r\n\r\n    // Assign markers to points on line\r\n    for (let marker of markers) {\r\n        let closest = 0;\r\n        let minDistance = Infinity;\r\n        for (let i = 0; i < line.length; i++) {\r\n            const distance = Vec.distance(marker.point, line[i]);\r\n            if (distance < minDistance) {\r\n                closest = i;\r\n                minDistance = distance;\r\n            }\r\n        }\r\n\r\n        // Check if marker is on line\r\n        if (minDistance > epsilon) {\r\n            throw `Der Wegpunkt \"${marker.name}\" ist nicht auf der Linie, bzw. nicht in der Nähe eines Eckpunkts der Linie.`;   \r\n        }\r\n\r\n        marker.index = closest;\r\n        delete marker.point;\r\n    }\r\n\r\n    // Bring markers in right order\r\n    markers.sort((a, b) => a.index - b.index);\r\n\r\n    return new Route(line, markers);\r\n}\r\n\r\n// Parses and converts coordinates from WGS84 to LV03\r\nfunction parseCoordinates(str) {\r\n    const wgs = str.split(\",\").map(s => Number(s));\r\n    const ch = Swisstopo.WGStoCH(wgs[1], wgs[0]);\r\n    return { x: ch[0], y: ch[1] };\r\n}\r\n\r\nfunction findConnectedLines(lines) {\r\n    const areEqual = (a, b) => Vec.distance(a, b) < epsilon;\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        for (let j = i + 1; j < lines.length; j++) {\r\n            if (areEqual(lines[i][lines[i].length - 1], lines[j][0])) {\r\n                // Matching directions, matching order: -> ->\r\n                return { i, j, reverseFirst: false, reverseSecond: false };\r\n            } else if (areEqual(lines[i][0], lines[j][lines[j].length - 1])) {\r\n                // Matching directions, reversed order: <- <-\r\n                return { i, j, reverseFirst: true, reverseSecond: true };\r\n            } else if (areEqual(lines[i][0], lines[j][0])) {\r\n                // Opposing directions, matching order: <- ->\r\n                return { i, j, reverseFirst: true, reverseSecond: false };\r\n            } else if (areEqual(lines[i][lines[i].length - 1], lines[j][lines[j].length - 1])) {\r\n                // Opposing directions, reversed order: -> <-\r\n                return { i, j, reverseFirst: false, reverseSecond: true };\r\n            }\r\n        }\r\n    }\r\n\r\n    // No connected lines found\r\n    return null;\r\n}\r\n","// The MIT License (MIT)\r\n// \r\n// Copyright (c) 2014 Federal Office of Topography swisstopo, Wabern, CH\r\n// Copyright (c) 2016 Sacha Bron https://github.com/BinaryBrain\r\n// Copyright (c) 2016 Basile Vu https://github.com/Flagoul\r\n// \r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n//\tof this software and associated documentation files (the \"Software\"), to deal\r\n//\tin the Software without restriction, including without limitation the rights\r\n//\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n//\tcopies of the Software, and to permit persons to whom the Software is\r\n//\tfurnished to do so, subject to the following conditions:\r\n// \r\n// The above copyright notice and this permission notice shall be included in\r\n//\tall copies or substantial portions of the Software.\r\n// \r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n//\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n//\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n//\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n//\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n//\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n//\tTHE SOFTWARE.\r\n// \r\n\r\n// Source: http://www.swisstopo.admin.ch/internet/swisstopo/en/home/topics/survey/sys/refsys/projections.html (see PDFs under \"Documentation\")\r\n// Updated 9 dec 2014\r\n// Please validate your results with NAVREF on-line service: http://www.swisstopo.admin.ch/internet/swisstopo/en/home/apps/calc/navref.html (difference ~ 1-2m)\r\n\r\n// Modified from https://github.com/ValentinMinder/Swisstopo-WGS84-LV03/blob/f1a7e0129d93647c1c11e151b95a208a53e57ce6/scripts/js/wgs84_ch1903.js\r\n\r\nexport class Swisstopo {\r\n    static WGStoCH(lat, lng) {\r\n        return [\r\n            this.WGStoCHy(lat, lng),\r\n            this.WGStoCHx(lat, lng)\r\n        ];\r\n    }\r\n\r\n    // Convert WGS lat/lng (° dec) to CH x\r\n    static WGStoCHx(lat, lng) {\r\n        // Convert decimal degrees to sexagesimal seconds\r\n        lat = this.DECtoSEX(lat);\r\n        lng = this.DECtoSEX(lng);\r\n\r\n        // Auxiliary values (% Bern)\r\n        const lat_aux = (lat - 169028.66) / 10000;\r\n        const lng_aux = (lng - 26782.5) / 10000;\r\n\r\n        // Process X\r\n        const x = 200147.07 +\r\n            308807.95 * lat_aux +\r\n            3745.25 * Math.pow(lng_aux, 2) +\r\n            76.63 * Math.pow(lat_aux, 2) -\r\n            194.56 * Math.pow(lng_aux, 2) * lat_aux +\r\n            119.79 * Math.pow(lat_aux, 3);\r\n\r\n        return x;\r\n    }\r\n\r\n    // Convert WGS lat/lng (° dec) to CH y\r\n    static WGStoCHy(lat, lng) {\r\n        // Convert decimal degrees to sexagesimal seconds\r\n        lat = this.DECtoSEX(lat);\r\n        lng = this.DECtoSEX(lng);\r\n\r\n        // Auxiliary values (% Bern)\r\n        const lat_aux = (lat - 169028.66) / 10000;\r\n        const lng_aux = (lng - 26782.5) / 10000;\r\n\r\n        // Process Y\r\n        const y = 600072.37 +\r\n            211455.93 * lng_aux -\r\n            10938.51 * lng_aux * lat_aux -\r\n            0.36 * lng_aux * Math.pow(lat_aux, 2) -\r\n            44.54 * Math.pow(lng_aux, 3);\r\n\r\n        return y;\r\n    }\r\n\r\n    static CHtoWGS(y, x) {\r\n        return [\r\n            this.CHtoWGSlng(y, x),\r\n            this.CHtoWGSlat(y, x)\r\n        ];\r\n    }\r\n\r\n    // Convert CH y/x to WGS lat\r\n    static CHtoWGSlat(y, x) {\r\n        // Converts military to civil and to unit = 1000km\r\n        // Auxiliary values (% Bern)\r\n        const y_aux = (y - 600000) / 1000000;\r\n        const x_aux = (x - 200000) / 1000000;\r\n\r\n        // Process lat\r\n        const lat = 16.9023892 +\r\n            3.238272 * x_aux -\r\n            0.270978 * Math.pow(y_aux, 2) -\r\n            0.002528 * Math.pow(x_aux, 2) -\r\n            0.0447 * Math.pow(y_aux, 2) * x_aux -\r\n            0.0140 * Math.pow(x_aux, 3);\r\n\r\n        // Unit 10000\" to 1 \" and converts seconds to degrees (dec)\r\n        return lat * 100 / 36;\r\n    }\r\n\r\n    // Convert CH y/x to WGS lng\r\n    static CHtoWGSlng(y, x) {\r\n        // Converts military to civil and\tto unit = 1000km\r\n        // Auxiliary values (% Bern)\r\n        const y_aux = (y - 600000) / 1000000;\r\n        const x_aux = (x - 200000) / 1000000;\r\n\r\n        // Process lng\r\n        const lng = 2.6779094 +\r\n            4.728982 * y_aux +\r\n            0.791484 * y_aux * x_aux +\r\n            0.1306 * y_aux * Math.pow(x_aux, 2) -\r\n            0.0436 * Math.pow(y_aux, 3);\r\n\r\n        // Unit 10000\" to 1 \" and converts seconds to degrees (dec)\r\n        return lng * 100 / 36;\r\n    }\r\n\r\n    // Convert angle in decimal degrees to sexagesimal seconds\r\n    static DECtoSEX(angle) {\r\n        // Extract DMS\r\n        const deg = parseInt(angle);\r\n        const min = parseInt((angle - deg) * 60);\r\n        const sec = (((angle - deg) * 60) - min) * 60;\r\n\r\n        // Result sexagesimal seconds\r\n        return sec + min * 60.0 + deg * 3600.0;\r\n    }\r\n}\r\n","<script>\r\n    import { importFile } from \"./modules/import.js\";\r\n\r\n    export let route = null;\r\n\r\n    let files;\r\n    let promise;\r\n\r\n    $: if (files && files[0]) {\r\n        promise = importFile(files[0])\r\n            .then((result) => route = result); // Trigger reactivity\r\n    }\r\n</script>\r\n\r\n<div\r\n    on:drop|preventDefault={(e) => files = e.dataTransfer.files}\r\n    on:dragover|preventDefault>\r\n    {#if files && files[0]}\r\n        {#await promise}\r\n            <h3>Route wird gewandert...</h3>\r\n        {:catch error}\r\n            <h3>Hoppla!</h3>\r\n            <p>Es gab einen Fehler beim Import:<br />{error}</p>\r\n            <button class=\"secondary\" on:click={() => files = null}>Nochmal versuchen</button>\r\n        {/await}\r\n    {:else}\r\n        <h2>Route hochladen</h2>\r\n        <p>Unterstützt sind Exporte im <b>KML-Format</b> von <a href=\"https://map.geo.admin.ch\" target=\"_blank\">map.geo.admin.ch</a> oder der <a href=\"https://www.swisstopo.admin.ch/en/maps-data-online/maps-geodata-online/swisstopo-app.html\" target=\"_blank\">swisstopo-App</a>.</p>\r\n        <p>Datei hierher ziehen oder...</p>\r\n        <input type=\"file\" id=\"upload\" accept=\".kml\" bind:files />\r\n        <button>\r\n            <label for=\"upload\">Datei auswählen</label>\r\n        </button>\r\n        <br>\r\n    {/if}\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        border-radius: 2rem;\r\n        border: 3px dashed var(--lighter-accent-color);\r\n        padding: 3rem 2rem;\r\n        text-align: center;\r\n    }\r\n\r\n    div h2 {\r\n        margin: 0;\r\n    }\r\n\r\n    input {\r\n        opacity: 0;\r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n    }\r\n\r\n    label {\r\n        cursor: inherit;\r\n    }\r\n</style>\r\n","<script>\r\n    import Info from \"./Info.svelte\";\r\n    import Profile from \"./Profile.svelte\";\r\n    import Table from \"./Table.svelte\";\r\n    import Introduction from \"./Introduction.svelte\";\r\n    import Upload from \"./Upload.svelte\";\r\n\r\n    let route;\r\n    let speed = 4;\r\n\r\n    function reverse() {\r\n        route.reverse();\r\n        route = route;\r\n    }\r\n\r\n    function print() {\r\n        window.print();\r\n    }\r\n</script>\r\n\r\n{#if route != null}\r\n    <header class=\"noprint\">\r\n        <a href=\".\">❮ startseite</a>\r\n    </header>\r\n{/if}\r\n<main>\r\n    {#if route == null}\r\n        <Introduction />\r\n        <Upload bind:route />\r\n    {:else}\r\n        <div class=\"editor\">\r\n            <div class=\"general\">\r\n                <div class=\"info\">\r\n                    <h2>Route</h2>\r\n                    <Info {route} {speed}/>\r\n                </div>\r\n                <div class=\"options noprint\">\r\n                    <h2>Optionen</h2>\r\n                    <label for=\"speed\">Geschwindigkeit in Lkm/h</label>\r\n                    <input id=\"speed\" type=\"number\" min=\"0.5\" step=\"0.5\" bind:value={speed} />\r\n                    <br />\r\n                    <button class=\"secondary\" on:click={reverse}>Richtung wechseln</button>\r\n                    <br />\r\n                    <br />\r\n                    <button on:click={print}>Herunterladen</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"table\">\r\n                <h2>Marschzeittabelle</h2>\r\n                <Table {route} {speed} />\r\n            </div>\r\n            <div class=\"profile\">\r\n                <h2>Höhenprofil</h2>\r\n                <Profile {route} />\r\n            </div>\r\n        </div>\r\n    {/if}\r\n</main>\r\n<footer>\r\n    <span>marschzeittabelle.ch</span>\r\n    <span class=\"noprint\">\r\n        | <a href=\"faq\">faq</a>\r\n        | <a href=\"https://github.com/ckolin/marschzeittabelle\">github</a>\r\n    </span>\r\n</footer>\r\n\r\n<style>\r\n    .general {\r\n        display: flex;\r\n        align-items: flex-start;\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .options label, input {\r\n        display: block;\r\n    }\r\n\r\n    .table, .profile {\r\n        overflow-x: auto;\r\n    }\r\n\r\n    footer {\r\n        text-align: center;\r\n        margin-top: 2rem;\r\n    }\r\n</style>\r\n","import App from \"./App.svelte\";\r\n\r\nimport { applyStyles } from \"./modules/theme.js\";\r\n\r\nconst app = new App({ target: document.body });\r\nexport default app;\r\n\r\napplyStyles();\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","get_current_component","Error","bubble","callbacks","$$","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","handle_promise","promise","info","token","index","key","resolved","child_ctx","undefined","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","formatDuration","hours","h","getParts","pad","formatTime","Math","floor","round","number","toString","markers","distanceSum","line","toFixed","effortSum","route","speed","ascent","descent","diff","markerProfile","height","calculateHeightDifference","Vec","static","x","y","vec","fac","hypot","subtract","theme","backgroundColor","textColor","darkerAccentColor","accentColor","lighterAccentColor","canvas","getContext","clearRect","width","padding","dotRadius","minHeight","Infinity","maxHeight","lineProfile","min","max","bounds","scale","ceil","project","distance","followLineProfile","lineProfileDistanceSum","moveTo","lineTo","beginPath","topLeft","bottomLeft","bottomRight","gradient","createLinearGradient","addColorStop","fillStyle","globalAlpha","lineWidth","lineCap","lineJoin","strokeStyle","stroke","font","textAlign","textBaseline","arc","PI","fillText","drawProfile","effort","duration","iterations","window","isNaN","res","calculate","fetchProfile","ensureInputPoints","resolution","geometry","coordinates","fetch","JSON","stringify","ok","json","profile","point","easting","northing","alts","COMB","some","Route","constructor","async","calculateDistances","reverse","calculateDistanceSum","rise","slope","abs","calculateSum","_","values","sum","importFile","file","reject","reader","FileReader","result","readAsText","readFile","content","kmlString","kml","DOMParser","parseFromString","querySelector","lines","placemarks","querySelectorAll","placemark","points","innerHTML","trim","split","s","parseCoordinates","connected","findConnectedLines","reverseFirst","reverseSecond","j","marker","closest","minDistance","sort","parseKml","loadProfiles","str","wgs","Number","ch","lat","lng","WGStoCHy","WGStoCHx","lat_aux","DECtoSEX","lng_aux","pow","CHtoWGSlng","CHtoWGSlat","y_aux","x_aux","angle","deg","parseInt","WGStoCH","areEqual","files","e","dataTransfer","print","app","body","property","replace","toLowerCase","getComputedStyle","getPropertyValue","applyStyles"],"mappings":"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"}